{"version":3,"file":"index.js","sources":["../../src/controllers/AppController.js","../../src/controllers/StaticContentController.js","../../src/utils/exceptions/NotFoundError.js","../../src/framework/EventHarness.js","../../node_modules/localforage/dist/localforage.js","../../src/models/Model.js","../../src/utils/escapeHTML.js","../../src/utils/DeviceType.js","../../src/models/Track.js","../../src/models/Survey.js","../../src/utils/exceptions/InternalAppError.js","../../src/utils/exceptions/TaxonError.js","../../src/models/Taxon.js","../../src/models/Occurrence.js","../../src/models/OccurrenceImage.js","../../src/utils/Logger.js","../../src/framework/App.js","../../src/controllers/SurveyPickerController.js","../../src/utils/exceptions/PartyError.js","../../src/models/Party.js","../../src/serviceworker/responses/ResponseFactory.js","../../src/serviceworker/packageClientResponse.js","../../src/serviceworker/responses/LocalResponse.js","../../src/serviceworker/responses/ImageResponse.js","../../src/serviceworker/responses/SurveyResponse.js","../../src/serviceworker/responses/OccurrenceResponse.js","../../src/serviceworker/responses/TrackResponse.js","../../src/serviceworker/BSBIServiceWorker.js","../../src/utils/formattedImplode.js"],"sourcesContent":["// AppController\r\n// Abstract super-class for page controllers\r\n\r\nexport class AppController {\r\n\r\n    /**\r\n     *\r\n     * @type {(null|string)}\r\n     */\r\n    route = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Page}\r\n     */\r\n    view;\r\n\r\n    title = 'untitled';\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n    handle;\r\n\r\n    /**\r\n     *\r\n     * @type {App}\r\n     */\r\n    app;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    beforeRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    afterRouteHandler = null;\r\n\r\n    // /**\r\n    //  *\r\n    //  * @type {function|null}\r\n    //  */\r\n    // leaveRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    alreadyRouteHandler = null;\r\n\r\n    static _handleIndex = 0;\r\n\r\n    static get nextHandle() {\r\n        return AppController._handleIndex++;\r\n    }\r\n\r\n    /**\r\n     * called from App.initialise() to trigger late-stage initialisation\r\n     */\r\n    initialise() {\r\n        this.view.initialise();\r\n    }\r\n\r\n    /**\r\n     * registers the default route from this.route\r\n     * or alternatively is overridden in a child class\r\n     *\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    registerRoute(router) {\r\n        if (null === this.route) {\r\n            throw new Error(`No route set for '${this.title}' controller.`);\r\n        }\r\n\r\n        console.log({route : this.route});\r\n\r\n        router.on(\r\n            this.route,\r\n            this.routeHandler.bind(this),\r\n            {\r\n                before : this.beforeRouteHandler ? this.beforeRouteHandler.bind(this) : null,\r\n                after : this.afterRouteHandler ? this.afterRouteHandler.bind(this) : null,\r\n                leave : this.leaveRouteHandler ? this.leaveRouteHandler.bind(this) : null,\r\n                already : this.alreadyRouteHandler ? this.alreadyRouteHandler.bind(this) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} params\r\n     * @param {string} query\r\n     */\r\n    routeHandler(params, query) {\r\n\r\n    }\r\n\r\n    leaveRouteHandler(params) {\r\n        console.log('leave route handler');\r\n        document.body.classList.remove('hide-controls');\r\n\r\n        for(let element of document.querySelectorAll('.needs-bsbi-controls')) {\r\n            if (!element.classList.contains('bsbi-controls')) {\r\n                element.classList.add('bsbi-controls');\r\n            }\r\n        }\r\n\r\n        for(let element of document.querySelectorAll('.dropdown-focused')) {\r\n            element.classList.remove('dropdown-focused');\r\n        }\r\n    }\r\n}\r\n","// StaticContentController\r\n\r\nimport {AppController} from './AppController';\r\n\r\nexport class StaticContentController extends AppController {\r\n    /**\r\n     * @type {string}\r\n     */\r\n    route;\r\n\r\n    /**\r\n     *\r\n     * @param {Page} view\r\n     * @param {string} route\r\n     */\r\n    constructor (view, route) {\r\n        super();\r\n\r\n        this.view = view;\r\n        this.route = route;\r\n\r\n        this.handle = AppController.nextHandle;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} params\r\n     * @param {string} query\r\n     */\r\n    routeHandler(params, query) {\r\n        // console.log(\"reached route handler for StaticContentController.js\");\r\n\r\n        this.app.currentControllerHandle = this.handle;\r\n        this.view.display();\r\n    }\r\n}\r\n","export class NotFoundError extends Error {\r\n    constructor (message) {\r\n        super(message);\r\n    }\r\n}","/**\r\n * @typedef {number} EventHarness~Handle\r\n */\r\n\r\nexport class EventHarness {\r\n    /**\r\n     *\r\n     * @type {*[]}\r\n     */\r\n    _eventListeners = [];\r\n\r\n    static STOP_PROPAGATION = 'STOP_PROPAGATION';\r\n\r\n    addWeakListener (eventName, handlerObject, handlerMethodName, constructionParam = {}) {\r\n        this._eventListeners = this._eventListeners || [];\r\n\r\n        const weakWrapped = new WeakRef(handlerObject);\r\n        handlerObject = null;\r\n\r\n        const handlerFunction = (context, eventName, invocationParam = {}) => {\r\n            let weakObject = weakWrapped.deref();\r\n\r\n            if (weakObject) {\r\n                weakObject[handlerMethodName]({context, eventName, ...invocationParam, ...constructionParam});\r\n            } else {\r\n                console.warn(`A ${eventName} handler (${handlerMethodName}) has been garbage collected`);\r\n            }\r\n        }\r\n\r\n        if (this._eventListeners[eventName]) {\r\n            return (this._eventListeners[eventName].push(handlerFunction)) - 1;\r\n        } else {\r\n            this._eventListeners[eventName] = [handlerFunction];\r\n            return 0; // first element in array\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Function} handler\r\n     * @param {*=} constructionParam\r\n     * @return {EventHarness~Handle} handle\r\n     */\r\n    addListener (eventName, handler, constructionParam = {}) {\r\n        this._eventListeners = this._eventListeners || [];\r\n\r\n        const handlerFunction = (context, eventName, invocationParam = {}) =>\r\n            handler({context, eventName, ...invocationParam, ...constructionParam});\r\n\r\n        if (this._eventListeners[eventName]) {\r\n            return (this._eventListeners[eventName].push(handlerFunction)) - 1;\r\n        } else {\r\n            this._eventListeners[eventName] = [handlerFunction];\r\n            return 0; // first element in array\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {number} handle\r\n     * @returns undefined\r\n     */\r\n    removeListener(eventName, handle) {\r\n        if (this._eventListeners[eventName]?.[handle]) {\r\n            delete this._eventListeners[eventName][handle];\r\n        } else {\r\n            console.log('trying to remove non-existent event handler, event = ' + eventName + ' handle = ' + handle);\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    /**\r\n     *\r\n     */\r\n    destructor() {\r\n        this._eventListeners = null;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Object=} param optional parameter to pass on to listener\r\n     * @return void\r\n     */\r\n    fireEvent (eventName, param) {\r\n        if (this._eventListeners) {\r\n            for (let f in this._eventListeners[eventName]) {\r\n                if (this._eventListeners[eventName].hasOwnProperty(f)) {\r\n                    if (this._eventListeners[eventName][f](this, eventName, arguments[1]) === EventHarness.STOP_PROPAGATION) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","import {EventHarness} from \"../framework/EventHarness\";\r\nimport localforage from 'localforage';\r\n\r\nexport function uuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,uuid)}\r\n\r\n/**\r\n * regex used to validate AppObject external ids\r\n * (UUID form is 8 digits followed by three groups of 4 digits followed by a group of 12)\r\n */\r\nexport const UUID_REGEX = /^[a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}$/;\r\n\r\nexport const SAVE_STATE_LOCAL = 'SAVED_LOCALLY';\r\nexport const SAVE_STATE_SERVER = 'SAVED_TO_SERVER';\r\n\r\nexport class Model extends EventHarness {\r\n    /**\r\n     * @type {string}\r\n     */\r\n    _id;\r\n\r\n    /**\r\n     * set if the object has been posted to the server\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _savedRemotely = false;\r\n\r\n    static EVENT_SAVED_REMOTELY = 'savedremotely';\r\n\r\n    static bsbiAppVersion = '';\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} savedFlag\r\n     */\r\n    set savedRemotely(savedFlag) {\r\n        if (this._savedRemotely !== savedFlag) {\r\n            this._savedRemotely = !!savedFlag;\r\n\r\n            if (this._savedRemotely) {\r\n                this.fireEvent(Model.EVENT_SAVED_REMOTELY, {id : this.id});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set if the object has been added to a temporary store (e.g. indexedDb)\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _savedLocally = false;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    deleted = false;\r\n\r\n    /**\r\n     * unix timestamp (seconds since epoch)\r\n     * Provided that the created stamp is < the modified stamp then the externally assigned creation stamp will be used\r\n     *\r\n     * @type {number}\r\n     */\r\n    createdStamp;\r\n\r\n    /**\r\n     * unix timestamp (seconds since epoch)\r\n     * modified stamp is generally server assigned - rather than using a potentially discrepant client clock\r\n     * this may increase synchrony and trust between distributed clients\r\n     *\r\n     * @type {number}\r\n     */\r\n    modifiedStamp;\r\n\r\n    /**\r\n     * DDb AppProject id\r\n     *\r\n     * @type {number}\r\n     */\r\n    projectId;\r\n\r\n    /**\r\n     * paired with isNew this marks objects that have never been edited\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isPristine = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.createdStamp = Math.floor(Date.now() / 1000);\r\n    }\r\n\r\n    /**\r\n     * returns true if either remote or local copy is missing\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    unsaved() {\r\n        return !(this._savedLocally && this._savedRemotely);\r\n    }\r\n\r\n    /**\r\n     * string\r\n     */\r\n    get id() {\r\n        if (!this._id) {\r\n            this._id = uuid();\r\n        } else if (this._id === 'undefined') {\r\n            console.error(\"id is literal 'undefined', am forcing new id\");\r\n            this._id = uuid();\r\n        }\r\n\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} newId\r\n     */\r\n    set id(newId) {\r\n\r\n        if (!newId.match(UUID_REGEX)) {\r\n            throw new Error(`Cannot set malformed object id '${newId}'.`);\r\n        } else {\r\n            // only allow an id to be set if not present already\r\n\r\n            if (this._id && newId !== this._id) {\r\n                throw new Error(`Object id has already been set, when trying to set new id '${newId}'.`);\r\n            }\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<function>}\r\n     * @private\r\n     */\r\n    static _tasks = [];\r\n\r\n    /**\r\n     * Add a post request to the queue\r\n     * Requests run in sequence.\r\n     * Returns a promise that resolves once the queued request completes\r\n     *\r\n     * The queue reduces the chance of requests being sent to the server out-of-order (which can lead to race conditions)\r\n     *\r\n     * @param formData\r\n     * @returns {Promise}\r\n     */\r\n    queuePost(formData) {\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @returns {Promise}\r\n             */\r\n            const task = () => {\r\n                console.log({'posting form data': formData});\r\n                return this.post(formData).then(resolve, reject);\r\n            };\r\n\r\n            Model._tasks.push(task);\r\n\r\n            if (Model._tasks.length > 1) {\r\n                console.log(`Added post request to the queue.`);\r\n            } else {\r\n                console.log(`No pending tasks, starting post request immediately.`);\r\n                task().finally(Model._next);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    static _next() {\r\n        Model._tasks.shift(); // save is done\r\n\r\n        if (Model._tasks.length) {\r\n            // run the next task\r\n            console.log('Running the next task.');\r\n            return Model._tasks[0]().finally(Model._next);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /save<object>\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexeddb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexeddb\r\n     *\r\n     * must test indexeddb for this eventuality after the save has returned\r\n     *\r\n     * @param {FormData} formData\r\n     * @returns {Promise}\r\n     */\r\n    post(formData) {\r\n        return fetch(this.SAVE_ENDPOINT, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                // need to find out whether this was a local store in indexedDb by the service worker\r\n                // or a server-side save\r\n\r\n                // to do that need to decode the json response\r\n                // which can only be done once, so need to clone first\r\n                const clonedResponse = response.clone();\r\n                return clonedResponse.json().then((responseData) => {\r\n                    /** @param {{saveState : string, created : number, modified : number}} responseData */\r\n\r\n                    console.log({'returned to client after save' : responseData});\r\n\r\n                    switch (responseData.saveState) {\r\n                        case SAVE_STATE_SERVER:\r\n                            this._savedLocally = true;\r\n                            this.savedRemotely = true;\r\n                            break;\r\n\r\n                        case SAVE_STATE_LOCAL:\r\n                            this._savedLocally = true;\r\n                            this.savedRemotely = false;\r\n                            break;\r\n\r\n                        default:\r\n                            console.log(`Unrecognised save state '${responseData.saveState}'`);\r\n                    }\r\n\r\n                    this.createdStamp = parseInt(responseData.created, 10);\r\n                    this.modifiedStamp = parseInt(responseData.modified, 10);\r\n\r\n                    // return the json version of the original response as a promise\r\n                    return response.json(); // assign appropriate JSON type to the response\r\n                });\r\n            } else {\r\n                // try instead to write the data to local storage\r\n\r\n                console.log('Save failed, presumably service worker is missing and there is no network connection. Should write to IndexedDb here.');\r\n                this._savedLocally = false;\r\n                this.savedRemotely = false;\r\n\r\n                return Promise.reject('IndexedDb storage not yet implemented');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {(Survey|Occurrence|OccurrenceImage)} modelObject\r\n     * @returns {Promise}\r\n     */\r\n    static retrieveFromLocal(id, modelObject) {\r\n        return localforage.getItem(`${modelObject.TYPE}.${id}`)\r\n            .then((descriptor) => {\r\n                if (descriptor) {\r\n                    modelObject._id = id; // _id must be set directly rather than through the setter, as a spurious id already set for the empty may need to be overwritten\r\n                    modelObject._parseDescriptor(descriptor);\r\n\r\n                    return modelObject;\r\n                } else {\r\n                    return Promise.reject(`Failed to retrieve ${modelObject.TYPE}.${id} locally`);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      [userId]: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: (number|string),\r\n     *      modified: (number|string),\r\n     *      projectId: (number|string)\r\n     *      }} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        this._parseAttributes(descriptor.attributes);\r\n        this._parseSavedState(descriptor.saveState);\r\n        this.deleted = (descriptor.deleted === true) || (descriptor.deleted === 'true'); // cast stringified boolean to true boolean\r\n        this.createdStamp = parseInt(descriptor.created, 10);\r\n        this.modifiedStamp = descriptor.modified ? parseInt(descriptor.modified, 10) : 0; // avoids NaN\r\n        this.projectId = parseInt(descriptor.projectId, 10);\r\n\r\n        if (descriptor.userId) {\r\n            this.userId = descriptor.userId;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, {}>|string|Array} attributes\r\n     */\r\n    _parseAttributes(attributes) {\r\n        if (typeof attributes === 'string') {\r\n            attributes = JSON.parse(attributes);\r\n        }\r\n\r\n        if (Array.isArray(attributes)) {\r\n            // problematic bug, where empty attributes come back as an array rather than as an object\r\n\r\n            //console.log('Attributes were spuriously represented as an array rather than as an empty object');\r\n            this.attributes = {};\r\n        } else {\r\n            this.attributes = attributes;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} saveState\r\n     */\r\n    _parseSavedState(saveState) {\r\n        switch (saveState) {\r\n            case SAVE_STATE_LOCAL:\r\n                this.savedRemotely = false;\r\n                this._savedLocally = true;\r\n                break;\r\n\r\n            case SAVE_STATE_SERVER:\r\n                this.savedRemotely = true;\r\n                this._savedLocally = true;\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Unrecognised saved state '${saveState}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update modified stamp to current time\r\n     */\r\n    touch() {\r\n        this.modifiedStamp = Math.floor(Date.now() / 1000);\r\n\r\n        if (this.isPristine) {\r\n            this.isPristine = false;\r\n            this.createdStamp = this.modifiedStamp;\r\n        }\r\n\r\n        this._savedLocally = false;\r\n        this.savedRemotely = false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string,{field: typeof FormField, [validator]: function, attributes: {label: string, helpText: string, placeholder: string, autocomplete: string}}>} formSectionProperties\r\n     * @return {{requiredFieldsPresent: boolean, validity: Object.<string, boolean>}}\r\n     */\r\n    evaluateCompletionStatus(formSectionProperties) {\r\n        const validity = {};\r\n        let requiredFieldsPresent = true;\r\n\r\n        for (let key in formSectionProperties) {\r\n            if (formSectionProperties.hasOwnProperty(key)) {\r\n                let property = formSectionProperties[key];\r\n\r\n                validity[key] = property.validator ?\r\n                    property.validator(key, property, this.attributes)\r\n                    :\r\n                    property.field.isValid(key, property, this.attributes);\r\n\r\n                if (null !== validity[key]) {\r\n                    // validity can be 'null' in which case field was optional and not assessed\r\n                    requiredFieldsPresent = requiredFieldsPresent && validity[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            requiredFieldsPresent,\r\n            validity\r\n        };\r\n    }\r\n}\r\n","/**\r\n *\r\n * @param text\r\n * @returns {string}\r\n */\r\nexport function escapeHTML(text) {\r\n    try {\r\n        // IE (even v 11) sometimes fails here with 'Unknown runtime error', see http://blog.rakeshpai.me/2007/02/ies-unknown-runtime-error-when-using.html\r\n        const textArea = document.createElement('textarea');\r\n        textArea.innerHTML = text;\r\n        return textArea.innerHTML.replace(/\"/g, '&quot;');\r\n    } catch (e) {\r\n        const pre = document.createElement('pre');\r\n        pre.appendChild(document.createTextNode(text));\r\n        return pre.innerHTML.replace(/\"/g, '&quot;');\r\n    }\r\n}","import {EventHarness} from \"../framework/EventHarness\";\r\n\r\nexport class DeviceType extends EventHarness {\r\n\tstatic DEVICE_TYPE_UNKNOWN = 'unknown';\r\n\tstatic DEVICE_TYPE_UNCHECKED = 'unchecked';\r\n\tstatic DEVICE_TYPE_MOBILE = 'mobile';\r\n\tstatic DEVICE_TYPE_IMMOBILE = 'immobile';\r\n\r\n\t/**\r\n\t * global flag affecting behaviour of some GPS functionality\r\n\t * e.g. on a non-mobile device, don't automatically seek GPS locality for new records\r\n\t * @private\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic _deviceType = DeviceType.DEVICE_TYPE_UNCHECKED;\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getDeviceType() {\r\n\t\tif (DeviceType._deviceType === DeviceType.DEVICE_TYPE_UNCHECKED) {\r\n\t\t\tif (navigator.userAgentData && \"mobile\" in navigator.userAgentData) {\r\n\t\t\t\tDeviceType._deviceType = navigator.userAgentData.mobile ?\r\n\t\t\t\t\tDeviceType.DEVICE_TYPE_MOBILE : DeviceType.DEVICE_TYPE_IMMOBILE;\r\n\t\t\t\tconsole.log(`Evaluated device using mobile flag, result: ${DeviceType._deviceType}`);\r\n\t\t\t} else if (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {\r\n\t\t\t\t// see https://javascript.plainenglish.io/how-to-detect-a-mobile-device-with-javascript-1c26e0002b31\r\n\t\t\t\tconsole.log(`Detected mobile via use-agent string: ${navigator.userAgent}`);\r\n\t\t\t\tDeviceType._deviceType = DeviceType.DEVICE_TYPE_MOBILE;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Flagging device type as unknown.');\r\n\t\t\t\tDeviceType._deviceType = DeviceType.DEVICE_TYPE_UNKNOWN;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn DeviceType._deviceType;\r\n\t}\r\n}\r\n","import {Model} from \"./Model\";\r\nimport {DeviceType} from \"../utils/DeviceType\";\r\nimport {App} from \"../framework/App\";\r\nimport {Survey} from \"./Survey\";\r\n//import {Survey} from \"./Survey\";\r\n\r\n/**\r\n * Used for saving current survey track that is still open\r\n * @type {number}\r\n */\r\nconst TRACK_END_REASON_SURVEY_OPEN = 0;\r\n\r\nconst TRACK_END_REASON_WATCHING_ENDED = 1;\r\nconst TRACK_END_REASON_SURVEY_DATE = 2;\r\nconst TRACK_END_REASON_SURVEY_CHANGED = 3;\r\n\r\nexport class Track extends Model {\r\n\r\n    /**\r\n     * @typedef PointTriplet\r\n     * @type {array}\r\n     * @property {number} 0 lng\r\n     * @property {number} 1 lat\r\n     * @property {number} 2 stamp (seconds since epoch)\r\n     */\r\n\r\n    /**\r\n     * @typedef PointSeries\r\n     * @type {Array<Array<PointTriplet>|number>}\r\n     * @property {Array<PointTriplet>} 0 points\r\n     * @property {number} 1 end reason code\r\n     */\r\n\r\n    /**\r\n     *\r\n     * @type {Object}\r\n     */\r\n    attributes = {};\r\n\r\n    /**\r\n     *\r\n     * @type {Array<PointSeries>}\r\n     */\r\n    points = []\r\n\r\n    /**\r\n     * next index to write to in points\r\n     * Following a successful save to the server, the earlier values will be cleared locally, but pointIndex will continue\r\n     *\r\n     * @type {number}\r\n     */\r\n    pointIndex = 0;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    userId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    surveyId = '';\r\n\r\n    /**\r\n     * route tracking should be maintained separately on each device\r\n     * (e.g. if multiple people linked to a single live survey)\r\n     *\r\n     * @type {string}\r\n     */\r\n    deviceId = '';\r\n\r\n    // /**\r\n    //  * set if the image has been posted to the server\r\n    //  * (a local copy might still exist, which may have been reduced to thumbnail resolution)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedRemotely = false;\r\n\r\n    // /**\r\n    //  * set if the image has been added to a temporary store (e.g. indexedDb)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedLocally = false;\r\n\r\n    SAVE_ENDPOINT = '/savetrack.php';\r\n\r\n    TYPE = 'track';\r\n\r\n    /**\r\n     * @type {App}\r\n     */\r\n    static _app;\r\n\r\n    /**\r\n     * Tracking is active if GPS watching is turned on,\r\n     * the current survey is from the same day and the device id matches\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static trackingIsActive = false;\r\n\r\n    /**\r\n     *\r\n     * @type {null|string}\r\n     * @private\r\n     */\r\n    static _currentlyTrackedSurveyId = null;\r\n\r\n    /**\r\n     *\r\n     * @type {null|string}\r\n     * @private\r\n     */\r\n    static _currentlyTrackedDeviceId = null;\r\n\r\n    /**\r\n     * keyed by survey id and then by device id\r\n     *\r\n     * @type {Map<string, Map<string,Track>>}\r\n     * @private\r\n     */\r\n    static _tracks = new Map();\r\n\r\n    /**\r\n     * Unix timestamp of most recent co-ordinate ping, in ms\r\n     * @type {number}\r\n     */\r\n    static lastPingStamp = 0;\r\n\r\n    /**\r\n     * Minimum interval between position updates in milliseconds\r\n     * @type {number}\r\n     */\r\n    static msInterval = 30 * 1000;\r\n\r\n    /**\r\n     *\r\n     * @type {EventHarness~Handle|null}\r\n     */\r\n    _surveyChangeListenerHandle = null;\r\n\r\n    static reset() {\r\n        Track._tracks = new Map();\r\n        Track.trackingIsActive = false;\r\n        Track._currentlyTrackedSurveyId = null;\r\n        Track.lastPingStamp = 0;\r\n    }\r\n\r\n    /**\r\n     * Need to listen for change of current survey\r\n     *\r\n     * @param {App} app\r\n     */\r\n    static registerApp(app) {\r\n        Track._app = app;\r\n\r\n        if (DeviceType.getDeviceType() !== DeviceType.DEVICE_TYPE_IMMOBILE) {\r\n            app.addListener(App.EVENT_CURRENT_SURVEY_CHANGED, () => {\r\n                const survey = Track._app.currentSurvey;\r\n\r\n                if (Track._currentlyTrackedSurveyId !== survey.id) {\r\n                    /**\r\n                     *\r\n                     * @type {null|Survey}\r\n                     */\r\n                    let previouslyTrackedSurvey = null;\r\n\r\n                    if (Track._currentlyTrackedSurveyId) {\r\n                        const oldTrack =\r\n                            Track._tracks.get(Track._currentlyTrackedSurveyId)\r\n                                ?.get(Track._currentlyTrackedDeviceId);\r\n\r\n                        previouslyTrackedSurvey = this._app.surveys.get(Track._currentlyTrackedSurveyId);\r\n\r\n                        if (oldTrack) {\r\n                            if (oldTrack._surveyChangeListenerHandle) {\r\n                                oldTrack.removeSurveyChangeListener();\r\n                            }\r\n\r\n                            oldTrack.endCurrentSeries(TRACK_END_REASON_SURVEY_CHANGED);\r\n\r\n                            oldTrack.save().then(() => {\r\n                                console.log(`Tracking for survey ${oldTrack.surveyId} saved following survey change.`)\r\n                            });\r\n                        } else {\r\n                            console.error(`Failed to retrieve old track for survey ${Track._currentlyTrackedSurveyId} in survey changed event handler.`)\r\n                        }\r\n\r\n                        Track._currentlyTrackedSurveyId = null;\r\n                        Track._currentlyTrackedDeviceId = null;\r\n                    }\r\n\r\n                    // Tracking should only resume automatically if the survey change was an automatic switch\r\n                    // to a new square.\r\n\r\n                    // otherwise, there is a risk that a survey switch will lead to spurious new points\r\n                    if (!survey.attributes?.casual && survey.isToday() && survey.baseSurveyId === previouslyTrackedSurvey?.baseSurveyId) {\r\n                        // Resume existing tracking, or start a new track.\r\n                        Track._trackSurvey(survey);\r\n                        Track.trackingIsActive = true;\r\n                    } else {\r\n                        Track._app.fireEvent(App.EVENT_CANCEL_WATCHED_GPS_USER_REQUEST);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Track._app.addListener(App.EVENT_WATCH_GPS_USER_REQUEST, () => {\r\n            const survey = this._app.currentSurvey;\r\n\r\n            if (survey) {\r\n                if (!survey.attributes?.casual && survey.isToday()) {\r\n                    // Resume existing tracking, or start a new track.\r\n                    Track._trackSurvey(survey);\r\n                    Track.trackingIsActive = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        Track._app.addListener(App.EVENT_CANCEL_WATCHED_GPS_USER_REQUEST, () => {\r\n\r\n            if (Track.trackingIsActive) {\r\n                const track = Track._tracks.get(Track._currentlyTrackedSurveyId)?.get(Track._currentlyTrackedDeviceId);\r\n\r\n                if (track) {\r\n                    track.endCurrentSeries(TRACK_END_REASON_WATCHING_ENDED);\r\n\r\n                    track.save().then(() => {\r\n                        console.log(`Tracking for survey ${track.surveyId} saved following tracking change.`)\r\n                    });\r\n                }\r\n\r\n                Track._currentlyTrackedSurveyId = null;\r\n                Track._currentlyTrackedDeviceId = null;\r\n                Track.trackingIsActive = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resume existing tracking, or start a new track.\r\n     *\r\n     * @param survey\r\n     * @private\r\n     */\r\n    static _trackSurvey(survey) {\r\n        let surveyTracks = Track._tracks.get(survey.id);\r\n        let track;\r\n\r\n        if (!surveyTracks) {\r\n            surveyTracks = new Map();\r\n            Track._tracks.set(survey.id, surveyTracks);\r\n        }\r\n\r\n        const deviceId = Track._app.deviceId;\r\n\r\n        if (surveyTracks.has(deviceId)) {\r\n            track = surveyTracks.get(deviceId);\r\n        } else {\r\n            track = survey.initialiseNewTracker(Track._app);\r\n            surveyTracks.set(deviceId, track);\r\n        }\r\n\r\n        track.registerSurvey(survey);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GeolocationPosition} position\r\n     * @param {GridCoords} gridCoords\r\n     */\r\n    static ping(position, gridCoords) {\r\n        const track = Track._tracks.get(Track._currentlyTrackedSurveyId)?.get(Track._currentlyTrackedDeviceId);\r\n\r\n        track?.addPoint(position, gridCoords);\r\n        Track.lastPingStamp = position.timestamp;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GeolocationPosition} position\r\n     * @param {GridCoords} gridCoords\r\n     */\r\n    addPoint(position, gridCoords) {\r\n        let series = this.points[this.points.length - 1];\r\n\r\n        if (!series || series?.[1] !== TRACK_END_REASON_SURVEY_OPEN) {\r\n            series = this.startPointSeries();\r\n        }\r\n\r\n        series[0][series[0].length] = [\r\n            position.coords.longitude,\r\n            position.coords.latitude,\r\n            position.timestamp\r\n        ];\r\n\r\n        this.touch();\r\n    }\r\n\r\n    /**\r\n     * Appends a new point series and advances this.pointIndex\r\n     * Does not close previous series and does not mark series as unsaved (which happens only\r\n     * once co-ordinate data starts to be added)\r\n     *\r\n     * @returns {PointSeries}\r\n     */\r\n    startPointSeries() {\r\n        const pointSeries = [\r\n            [], // empty array of PointTriplets\r\n            TRACK_END_REASON_SURVEY_OPEN\r\n        ];\r\n\r\n        this.points[this.points.length] = pointSeries;\r\n\r\n        this.pointIndex++;\r\n\r\n        return pointSeries;\r\n    }\r\n\r\n    /**\r\n     * Called only if tracking is currently enabled\r\n     *\r\n     * @param {number} reason\r\n     */\r\n    endCurrentSeries(reason) {\r\n        if (this.points.length) {\r\n            const lastEntry = this.points[this.points.length - 1];\r\n\r\n            if (lastEntry[0].length) {\r\n                // co-ordinates have been added\r\n\r\n                lastEntry[1] = reason;\r\n            } else {\r\n                // this is ann empty series, so just delete it\r\n\r\n                delete this.points[this.points.length - 1];\r\n                this.pointIndex--;\r\n            }\r\n        } else {\r\n            //throw new Error(\"Track.endCurrentSeries called when no series in progress.\");\r\n            console.error(\"Track.endCurrentSeries called when no series in progress.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /savetrack.php\r\n     *\r\n     * This should be intercepted by a service worker, which could write the object to indexeddb\r\n     * A successful save (local or to server) will result in a json response containing the object\r\n     * and also the state of persistence. After a save to the server the points list may be cleared,\r\n     * but pointIndex will be maintained so that tracking can resume.\r\n     *\r\n     * If saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the object directly to indexeddb\r\n     *\r\n     * Must test indexeddb for this eventuality after the save has returned.\r\n     *\r\n     * @param {boolean} [forceSave]\r\n     * @returns {Promise}\r\n     */\r\n    save(forceSave = false) {\r\n        if (this.unsaved() || forceSave) {\r\n            const formData = new FormData;\r\n\r\n            if (!this.surveyId) {\r\n                throw new Error(`Survey id must be set before saving an occurrence.`);\r\n            }\r\n\r\n            if (!this.deviceId) {\r\n                throw new Error(`Device id must be set before saving an occurrence.`);\r\n            }\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.surveyId);\r\n            formData.append('deviceId', this.deviceId);\r\n            formData.append('id', `${this.surveyId}.${this.deviceId}`);\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('pointIndex', this.pointIndex.toString());\r\n            formData.append('points', JSON.stringify(this.points));\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('modified', this.modifiedStamp?.toString() || '');\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log('queueing Track post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.resolve();\r\n            //return Promise.reject(`Track for survey ${this.surveyId} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: number,\r\n     *      modified: number,\r\n     *      projectId: number,\r\n     *      surveyId: string,\r\n     *      deviceId: string,\r\n     *      pointIndex: string,\r\n     *      points: string,\r\n     *      }} descriptor\r\n     * @param {string} descriptor.points JSON-serialized Array<PointSeries>\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n        this.deviceId = descriptor.deviceId;\r\n        this.pointIndex = parseInt(descriptor.pointIndex, 10);\r\n        this.points = JSON.parse(descriptor.points);\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Listen for survey changes (e.g. to date) that might abort tracking\r\n     *\r\n     * surveyId and deviceId will already have been set\r\n     * The track must already have been added to Track._tracks\r\n     *\r\n     * sets Track._currentlyTrackedSurveyId and Track._currentlyTrackedDeviceId\r\n     *\r\n     * @param {Survey} survey\r\n     *\r\n     */\r\n    registerSurvey(survey) {\r\n        Track._currentlyTrackedSurveyId = this.surveyId;\r\n        Track._currentlyTrackedDeviceId = Track._app.deviceId;\r\n\r\n        if (survey.attributes.casual) {\r\n            throw new Error('Attempt to register tracking for casual survey.');\r\n        }\r\n\r\n        if (!this._surveyChangeListenerHandle) {\r\n            this._surveyChangeListenerHandle = survey.addListener(Survey.EVENT_MODIFIED, () => {\r\n                // need to check for change to date\r\n\r\n                if (Track.trackingIsActive && survey.id === Track._currentlyTrackedSurveyId) {\r\n                    if (!survey.isToday()) {\r\n                        this.endCurrentSeries(TRACK_END_REASON_SURVEY_DATE);\r\n\r\n                        this.save().then(() => {\r\n                            console.log(`Tracking for survey ${this.surveyId} saved following survey date change.`)\r\n                        });\r\n\r\n                        Track._currentlyTrackedSurveyId = null;\r\n                        Track._currentlyTrackedDeviceId = null;\r\n                        Track.trackingIsActive = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!this._surveyOccurrencesChangeListenerHandle) {\r\n            this._surveyOccurrencesChangeListenerHandle = survey.addListener(Survey.EVENT_OCCURRENCES_CHANGED, () => {\r\n                // if occurrences have changed, then worth ensuring that tracking is up-to-date\r\n\r\n                this.isPristine = false; // probably not required, but safety fallback to ensure survey is saved\r\n\r\n                if (Track.trackingIsActive && survey.id === Track._currentlyTrackedSurveyId && !this.isPristine && this.unsaved()) {\r\n                    this.save().then(() => {\r\n                        console.log(`Tracking for survey ${this.surveyId} saved following occurrence change.`)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    removeSurveyChangeListener() {\r\n        const survey = Track._app.surveys.get(this.surveyId);\r\n\r\n        survey?.removeListener(Survey.EVENT_MODIFIED, this._surveyChangeListenerHandle);\r\n        this._surveyChangeListenerHandle = null;\r\n    }\r\n}\r\n","// a Survey captures the currentSurvey meta-data\r\n// i.e. it captures site details (name, location); user details (name, email)\r\n//\r\n// if a user were to submit multiple surveys then they would end up in the contact database multiple times\r\n// this is probably unavoidable. Not worth the effort and risk of automatic de-duplication. Email preferences would be\r\n// shared, keyed by email.\r\n\r\nimport {Model, uuid} from \"./Model\";\r\nimport {escapeHTML} from \"../utils/escapeHTML\";\r\nimport {GridRef} from 'british-isles-gridrefs'\r\nimport {Track} from \"./Track\";\r\n\r\nexport class Survey extends Model {\r\n\r\n    /**\r\n     * fired from Survey when the object's contents have been modified\r\n     *\r\n     * parameter is {surveyId : string}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     * fired on Survey when one of its occurrences has been modified, added, deleted or reloaded\r\n     *\r\n     * no parameters\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_OCCURRENCES_CHANGED = 'occurrenceschanged';\r\n\r\n    /**\r\n     * fired on Survey when one of its occurrences has been added, deleted or reloaded\r\n     *\r\n     * no parameters\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_LIST_LENGTH_CHANGED = 'listlengthchanged';\r\n\r\n    /**\r\n     * parameter is {currentHectadSubunit : string}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_TETRAD_SUBUNIT_CHANGED = 'tetradsubunitchanged';\r\n\r\n    SAVE_ENDPOINT = '/savesurvey.php';\r\n\r\n    TYPE = 'survey';\r\n\r\n    /**\r\n     *\r\n     * @type {{\r\n     *     [sampleUnit] : {selection : Array<string>, [precision] : number}\r\n     *     [georef] : {\r\n     *          rawString: string,\r\n     *          precision: number|null,\r\n     *          source: string|null,\r\n     *          gridRef: string,\r\n     *          latLng: {lat : number, lng : number}|null,\r\n     *          [defaultSurveyGridRef]: string|null,\r\n     *          [defaultSurveyPrecision]: number|null\r\n     *          },\r\n     *     [date] : string|null,\r\n     *     [place] : string|null,\r\n     *     [surveyName] : string|null,\r\n     *     [casual] : \"1\"|null,\r\n     *     [defaultCasual] : \"1\"|null,\r\n     *     [vc] : {selection : Array<string>, inferred: (boolean|null)}|null\r\n     * }}\r\n     */\r\n    attributes = {\r\n\r\n    };\r\n\r\n    /**\r\n     * if set then provide default values (e.g. GPS look-up of current geo-reference)\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isNew = false;\r\n\r\n    /**\r\n     * kludge to flag once the App singleton has set up a listener for changes on the survey\r\n     * @type {boolean}\r\n     */\r\n    hasAppModifiedListener = false;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    userId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {Track|null}\r\n     * @private\r\n     */\r\n    _track = null;\r\n\r\n    /**\r\n     * Used to tie together linked surveys\r\n     * (e.g. deliberately duplicated, or generated automatically by movement to a new grid-square)\r\n     *\r\n     * Tracking of location can continue seamlessly across linked surveys.\r\n     *\r\n     * @type {string}\r\n     */\r\n     _baseSurveyId = '';\r\n\r\n    /**\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null)}|null)}\r\n     */\r\n    get geoReference() {\r\n        return this.attributes.georef || {\r\n            gridRef: '',\r\n            rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n            source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n            latLng: null,\r\n            precision: null\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    get baseSurveyId() {\r\n        if (!this._baseSurveyId || this._baseSurveyId === 'undefined') {\r\n            this._baseSurveyId = this._id;\r\n        }\r\n\r\n        return this._baseSurveyId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     */\r\n    set baseSurveyId(id) {\r\n        this._baseSurveyId = id;\r\n    }\r\n\r\n    /**\r\n     * string\r\n     */\r\n    get id() {\r\n        if (!this._id) {\r\n            this._id = uuid();\r\n\r\n            if (!this._baseSurveyId) {\r\n                this._baseSurveyId = this._id;\r\n            }\r\n        } else if (this._id === 'undefined') {\r\n            console.error(\"id is literal 'undefined', am forcing new id\");\r\n            this._id = uuid();\r\n\r\n            if (!this._baseSurveyId) {\r\n                this._baseSurveyId = this._id;\r\n            }\r\n        }\r\n\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * Set for tetrad structured surveys, where user may be working within a monad subdivision\r\n     *\r\n     * @type {string}\r\n     */\r\n    currentTetradSubunit = '';\r\n\r\n    /**\r\n     * Get a summarised geo-ref from the survey geo-reference, based on the survey unit type and precision\r\n     * If the user has explicitly specified a centroid-based survey then the result will instead be a centroid\r\n     *\r\n     * For structured tetrad surveys squareReference will return the currently selected monad within the tetrad (or tetrad if 2km scale selected)\r\n     * For monad or 100m square surveys will return grid-ref at that resolution\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null)}|null)}\r\n     */\r\n    get summaryReference() {\r\n        if (this.attributes.sampleUnit?.selection?.[0]) {\r\n            let n = parseInt(this.attributes.sampleUnit.selection[0], 10);\r\n\r\n            if (n > 0) {\r\n                // have user-specified square precision value\r\n\r\n                if (n === 2000 && this.currentTetradSubunit) {\r\n                    // special-case treatment of tetrad surveys using a monad subdivision\r\n\r\n                    return {\r\n                        gridRef: this.currentTetradSubunit,\r\n                        rawString: this.currentTetradSubunit,\r\n                        source: 'unknown',\r\n                        latLng: null,\r\n                        precision: /[A-Z]$/.test(this.currentTetradSubunit) ? 2000 : 1000\r\n                    }\r\n                }\r\n\r\n                const ref = this.geoReference;\r\n                const gridRef = GridRef.fromString(ref.gridRef);\r\n\r\n                if (gridRef && gridRef.length <= n) {\r\n                    const newRef = gridRef.gridCoords.to_gridref(n);\r\n\r\n                    if (n === 2000) {\r\n                        this.currentTetradSubunit = newRef;\r\n                    } else {\r\n                        this.currentTetradSubunit = '';\r\n                    }\r\n\r\n                    return {\r\n                        gridRef: newRef,\r\n                        rawString: newRef,\r\n                        source: 'unknown',\r\n                        latLng: null,\r\n                        precision: n\r\n                    }\r\n                } else {\r\n                    return {\r\n                        gridRef: '',\r\n                        rawString: '',\r\n                        source: 'unknown',\r\n                        latLng: null,\r\n                        precision: null\r\n                    }\r\n                }\r\n            } else {\r\n                switch (this.attributes.sampleUnit.selection[0]) {\r\n                    case 'centroid':\r\n                        const georef = this.geoReference; // avoid calling getter repeatedly\r\n\r\n                        return {\r\n                            gridRef: georef.gridRef,\r\n                            rawString: '',\r\n                            source: 'unknown',\r\n                            latLng: georef.latLng,\r\n                            precision: this.attributes.sampleUnit.precision || 1000\r\n                        };\r\n\r\n                    case 'other':\r\n                        return this._infer_square_ref_from_survey_ref();\r\n\r\n                    default:\r\n                        throw new Error(`Unrecognized sample unit value '${this.attributes.sampleUnit.selection[0]}'`);\r\n                }\r\n            }\r\n        } else {\r\n            return this._infer_square_ref_from_survey_ref();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {{rawString: string, precision: null, source: string, gridRef: string, latLng: null}|{rawString, precision: null, source: string, gridRef, latLng: null}}\r\n     * @private\r\n     */\r\n    _infer_square_ref_from_survey_ref() {\r\n        if (this.attributes.georef?.gridRef && this.attributes.georef.precision <= 2000) {\r\n            let newRef;\r\n\r\n            if (this.attributes.georef.precision === 2000 || this.attributes.georef.precision === 1000) {\r\n                newRef = this.attributes.georef.gridRef;\r\n            } else {\r\n                // this is really inefficient\r\n                const context = this.getGeoContext();\r\n                newRef = context.monad || context.tetrad;\r\n            }\r\n\r\n            return {\r\n                gridRef: newRef,\r\n                rawString: newRef,\r\n                source: 'unknown',\r\n                latLng: null,\r\n                precision: this.attributes.georef.precision\r\n            }\r\n        } else {\r\n            return {\r\n                gridRef: '',\r\n                rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n                source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n                latLng: null,\r\n                precision: null\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get date() {\r\n        return this.attributes.date || '';\r\n    }\r\n\r\n    /**\r\n     * returns survey date string, with special formatting for 'today' and 'yesterday'\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get prettyDate() {\r\n        const date = this.attributes.date || '';\r\n        const today = new Date;\r\n\r\n        if (date === today.toISOString().slice(0,10)) {\r\n            return 'today';\r\n        } else if (date === (new Date(today.valueOf() - (3600*24*1000))).toISOString().slice(0,10)) {\r\n            return 'yesterday';\r\n        } else {\r\n            return date;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    isToday() {\r\n        return this.date === (new Date).toISOString().slice(0,10);\r\n    }\r\n\r\n    get place() {\r\n        return this.attributes.place || '';\r\n    }\r\n\r\n    /**\r\n     * called after the form has changed, before the values have been read back in to the occurrence\r\n     * read new values\r\n     * validate\r\n     * then fire its own change event (Survey.EVENT_MODIFIED)\r\n     * @param {{form: SurveyForm}} params\r\n     */\r\n    formChangedHandler(params) {\r\n        console.log('Survey change handler invoked.');\r\n\r\n        params.form.updateModelFromContent().then(() => {\r\n\r\n            console.log('Survey calling conditional validation.');\r\n\r\n            // refresh the form's validation state\r\n            params.form.conditionallyValidateForm();\r\n\r\n            this.touch();\r\n            this.fireEvent(Survey.EVENT_MODIFIED, {surveyId: this.id});\r\n        })\r\n        .catch((error) => {\r\n            // if updateModelFromContent() fails, due to user rejection of dialogue box then intentionally don't want survey to save\r\n            console.log({\"In survey form handler promise rejected (probably normal cancellation of dialogue box)\" : error});\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Used for special-case setting of a custom attribute\r\n     * (i.e. not usually one linked to a form)\r\n     * e.g. used for updating the NYPH null-list flag\r\n     *\r\n     * @param attributeName\r\n     * @param value\r\n     */\r\n    setAttribute(attributeName, value) {\r\n        if (this.attributes[attributeName] !== value) {\r\n            this.attributes[attributeName] = value;\r\n\r\n            this.touch();\r\n            this.fireEvent(Survey.EVENT_MODIFIED, {surveyId : this.id});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * returns interpreted grid-ref / vc summary, used to look-up meta-data for the taxon list\r\n     *\r\n     * @return {{\r\n     *     hectad : string,\r\n     *     tetrad : string,\r\n     *     monad : string,\r\n     *     country : string,\r\n     *     vc : number[],\r\n     *     interleavedGridRef : string,\r\n     *     [surveyGridUnit] : number,\r\n     *     [hectare] : string,\r\n     * }}\r\n     */\r\n    getGeoContext() {\r\n        const geoRef = this.geoReference;\r\n\r\n        const result = {};\r\n\r\n        if (this.attributes.vc?.selection) {\r\n            result.vc = [...this.attributes.vc.selection]; // clone rather than reference the VC selection\r\n        } else {\r\n            result.vc = [];\r\n        }\r\n\r\n        const surveyGridUnit = parseInt(this.attributes.sampleUnit?.selection?.[0], 10) || null;\r\n\r\n        if (surveyGridUnit) {\r\n            result.surveyGridUnit = surveyGridUnit;\r\n        }\r\n\r\n        if (geoRef?.gridRef) {\r\n            const gridRef = GridRef.fromString(geoRef.gridRef);\r\n\r\n            if (gridRef) {\r\n                if (gridRef.length <= 100 && surveyGridUnit === 100) {\r\n                    result.hectare = gridRef.gridCoords.to_gridref(100);\r\n                }\r\n\r\n                if (gridRef.length <= 1000) {\r\n                    result.monad = gridRef.gridCoords.to_gridref(1000);\r\n                }\r\n\r\n                if (gridRef.length <= 2000) {\r\n                    result.tetrad = gridRef.gridCoords.to_gridref(2000);\r\n                }\r\n\r\n                result.country = gridRef.country;\r\n            }\r\n\r\n            result.hectad = gridRef.gridCoords.to_gridref(10000);\r\n\r\n            result.interleavedGridRef = GridRef.interleave(geoRef.gridRef);\r\n        }\r\n\r\n        return {...{hectad : '', tetrad : '', monad : '', hectare : '', country : '', vc : [], interleavedGridRef : ''}, ...result};\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /savesurvey.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexeddb\r\n     * a successful save will result in a json response containing the uri from which the object may be retrieved\r\n     * and also the state of persistence (whether or not the object was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the object directly to indexeddb\r\n     *\r\n     * must test indexeddb for this eventuality after the save has returned\r\n     *\r\n     * @param {boolean} [forceSave]\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    save(forceSave = false) {\r\n        if (forceSave || this.unsaved()) {\r\n            const formData = new FormData;\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.id);\r\n            formData.append('id', this.id); // this is incorrect duplication\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('baseSurveyId', this.baseSurveyId || this.id);\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log('queueing survey post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`Survey ${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {{summarySquarePrecision : number, summarizeTetrad : boolean}} options\r\n     * @returns {string} an html-safe string based on the locality and creation date\r\n     */\r\n    generateSurveyName(options = {\r\n        summarySquarePrecision : 1000,\r\n        summarizeTetrad : false,\r\n    }) {\r\n\r\n        if (this.attributes.casual) {\r\n            // special-case treatment of surveys with 'casual' attribute (which won't have a locality or date as part of the survey)\r\n\r\n            return this.attributes.surveyName ?\r\n                escapeHTML(this.attributes.surveyName)\r\n                :\r\n                `Data-set created on ${this._createdDateString()}`;\r\n        } else {\r\n            let place;\r\n\r\n            if (this.attributes.place) {\r\n                let summaryGridRef = this._summarySquareString(options.summarySquarePrecision);\r\n\r\n                place = `${this.attributes.place}${summaryGridRef ? ` ${summaryGridRef}` : ''}`;\r\n            } else if (this.attributes.georef?.gridRef) {\r\n                place = this._summarySquareString(options.summarySquarePrecision);\r\n            } else {\r\n                place = '(unlocalized)';\r\n            }\r\n\r\n            return `${escapeHTML(place)} ${this.prettyDate || this._createdDateString()}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if survey has specified grid-unit then use that instead of the fallBackPrecision option\r\n     *\r\n     * @param {number|null} fallBackPrecision\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _summarySquareString(fallBackPrecision) {\r\n        if (this.attributes.georef?.gridRef) {\r\n            let sampleUnit;\r\n\r\n            // '<' replacement used simplistically to sanitize against script injection\r\n            const rawGridRef = this.attributes.georef.gridRef.replace(/[<&\\s]/g, '');\r\n\r\n            if (this.attributes.sampleUnit) {\r\n                sampleUnit = parseInt(this.attributes.sampleUnit?.selection[0], 10) || null;\r\n            }\r\n\r\n            const precision = sampleUnit || fallBackPrecision;\r\n\r\n            if (precision) {\r\n                const gridRef = GridRef.fromString(rawGridRef);\r\n\r\n                return gridRef?.gridCoords?.to_gridref(gridRef.length <= precision ? precision : gridRef.length) || this.attributes.georef.gridRef;\r\n            } else {\r\n                return rawGridRef;\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _createdDateString() {\r\n        const createdDate = new Date(this.createdStamp * 1000);\r\n        let dateString;\r\n\r\n        try {\r\n            // 'default' locale fails on Edge\r\n            dateString = createdDate.toLocaleString('default', {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric'\r\n            });\r\n        } catch (e) {\r\n            dateString = createdDate.toLocaleString('en-GB', {year: 'numeric', month: 'long', day: 'numeric'});\r\n        }\r\n\r\n        return dateString;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Set<string>}\r\n     *\r\n     */\r\n    extantOccurrenceKeys = new Set();\r\n\r\n    /**\r\n     * @todo need to exclude deleted records\r\n     * @returns {number}\r\n     *\r\n     */\r\n    countRecords() {\r\n        return this.extantOccurrenceKeys.size;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      [userId]: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: (number|string),\r\n     *      modified: (number|string),\r\n     *      projectId: (number|string),\r\n     *      [baseSurveyId]: (string),\r\n     *      }} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this._baseSurveyId = descriptor.baseSurveyId;\r\n    }\r\n\r\n    /**\r\n     * @returns {Survey}\r\n     */\r\n    duplicate(newAttributes = {}, properties = {}) {\r\n        const newSurvey = new Survey();\r\n\r\n        // @todo need to be certain that are not cloning image attribute\r\n        newSurvey.attributes = Object.assign(structuredClone(this.attributes), newAttributes);\r\n        newSurvey.userId = properties.hasOwnProperty('userId') ? properties.userId : this.userId;\r\n        newSurvey.isPristine = true;\r\n        newSurvey.isNew = false; // don't want GPS override of geo-ref\r\n        newSurvey._savedLocally = false;\r\n        newSurvey._savedRemotely = false;\r\n        newSurvey.deleted = false;\r\n        newSurvey.projectId = this.projectId;\r\n        newSurvey.baseSurveyId = this.baseSurveyId;\r\n        newSurvey.id; // trigger id generation\r\n\r\n        return newSurvey;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {App} app\r\n     * @returns {Track}\r\n     */\r\n    initialiseNewTracker(app) {\r\n        const track = new Track();\r\n        track.surveyId = this.id;\r\n        track.deviceId = app.deviceId;\r\n        track.projectId = app.projectId;\r\n        track.isPristine = true;\r\n\r\n        this.track = track;\r\n        track.registerSurvey(this);\r\n\r\n        return track;\r\n    }\r\n\r\n    /**\r\n     * returns the currently active track (other tracks may exist if the survey has shifted between devices etc.)\r\n     *\r\n     * @returns {Track|null}\r\n     */\r\n    get track() {\r\n        return this._track;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Track|null} track\r\n     */\r\n    set track(track) {\r\n        this._track = track;\r\n    }\r\n}\r\n","/**\r\n *\r\n */\r\nexport class InternalAppError extends Error {\r\n\r\n}","export class TaxonError extends Error {\r\n\r\n}","import {TaxonError} from \"../utils/exceptions/TaxonError\";\r\nimport {escapeHTML} from \"../utils/escapeHTML\";\r\n\r\nexport class Taxon {\r\n    /**\r\n     * @typedef RawTaxon\r\n     * @type {array}\r\n     * @property {string} 0 - nameString\r\n     * @property {(string|number)} 1 - canonical\r\n     * @property {string} 2 hybridCanonical, raw entry is 0/undefined if canonical == hybridCanonical\r\n     * @property {(string|number)} 3 acceptedEntityId or 0/undefined if name is accepted\r\n     * @property {string} 4 qualifier\r\n     * @property {string} 5 authority\r\n     * @property {string} 6 vernacular\r\n     * @property {string} 7 vernacularRoot\r\n     * @property {number} 8 used\r\n     * @property {number} 9 sortOrder\r\n     * @property {Array.<string>} 10 parentIds\r\n     * @property {number} [11] notForEntry (1 === not for entry)\r\n     * @property {string} [12] GB national status\r\n     * @property {string} [13] IE national status\r\n     * @property {string} [14] CI national status\r\n     * @property {string} [15] GB rare/scarce conservation status\r\n     * @property {string} [16] IE rare/scarce conservation status\r\n     *\r\n     * // properties beyond this point are not part of the source file\r\n     * @property {{}} [17] Presence in grid-squares (top-level object is keyed by grid-ref)\r\n     * @property {{}} [18] Presence on rpr\r\n     * @property {{}} [19] Presence in county (top-level object is keyed by vc code string, including prefix)\r\n     */\r\n\r\n    static GR_PRESENCE_KEY = 17;\r\n    static RPR_KEY = 18;\r\n    static VC_PRESENCE_KEY = 19;\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, RawTaxon>}\r\n     */\r\n    static rawTaxa;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    id;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    nameString = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    canonical = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    hybridCanonical = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    acceptedEntityId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    qualifier = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    authority = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    vernacular = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    vernacularRoot = '';\r\n\r\n    /**\r\n     * if set then the vernacular name should not be allowed for data entry\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    badVernacular = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    used;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    sortOrder;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<string>}\r\n     */\r\n    parentIds = [];\r\n\r\n    /**\r\n     *\r\n     * @type {{CI: null|string, GB: null|string, IE: null|string}}\r\n     */\r\n    nationalStatus = {\r\n        GB : null,\r\n        IE : null,\r\n        CI : null\r\n    }\r\n\r\n    /**\r\n     * if rated, then the string is 'scarce' or 'rare'\r\n     *\r\n     * @type {{GB: null|('rare'|'scarce'), IE: null|('rare'|'scarce')}}\r\n     */\r\n    rareScarceStatus = {\r\n        GB : null,\r\n        IE : null\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {{number, (string|true)}}\r\n     */\r\n    rprStatus = {}\r\n\r\n    /**\r\n     * keyed by grid-square string\r\n     * @type {Object<string, {current : number, previous : number, [year] : number, [status] : string}>|null}\r\n     */\r\n    occurrenceCoverage = null;\r\n\r\n    /**\r\n     * keyed by vc code string\r\n     * @type {Object<string, {current : number, previous : number, [year] : number}>|null}\r\n     */\r\n    vcPresence = null;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static showVernacular = true;\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, RawTaxon>} taxa\r\n     */\r\n    static setTaxa(taxa) {\r\n        Taxon.rawTaxa = taxa;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, RawTaxon>} taxa\r\n     * @param {string} sourceUrl\r\n     */\r\n    static initialiseTaxa(taxa, sourceUrl) {\r\n        Taxon.rawTaxa = taxa;\r\n\r\n        if ((taxa.stamp + (3600 * 24 * 7)) < (Date.now() / 1000)) {\r\n            console.log(`Taxon list may be stale (stamp is ${taxa.stamp}), prompting re-cache.`);\r\n            navigator?.serviceWorker?.ready.then((registration) => {\r\n                registration.active.postMessage(\r\n                    {\r\n                        action: 'recache',\r\n                        url: sourceUrl\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @returns {Taxon}\r\n     * @throws {TaxonError}\r\n     */\r\n    static fromId (id) {\r\n        if (!Taxon.rawTaxa) {\r\n            throw new TaxonError(`Taxon.fromId() called before taxon list has been initialized.`);\r\n        }\r\n\r\n        if (!Taxon.rawTaxa.hasOwnProperty(id)) {\r\n            console.error(`Taxon id '${id}' not found.`);\r\n            throw new TaxonError(`Taxon id '${id}' not found.`);\r\n        }\r\n\r\n        const raw = Taxon.rawTaxa[id];\r\n\r\n        const taxon = new Taxon;\r\n\r\n        taxon.id = id;\r\n        taxon.nameString = raw[0];\r\n        taxon.canonical = raw[1] || raw[0]; // raw entry is blank if namesString == canonical\r\n        taxon.hybridCanonical = raw[2] || taxon.canonical; // raw entry is blank if canonical == hybridCanonical\r\n        taxon.acceptedEntityId = raw[3] || id;\r\n        taxon.qualifier = raw[4] || '';\r\n        taxon.authority = raw[5] || '';\r\n        taxon.vernacular = raw[6] || '';\r\n        taxon.vernacularRoot = raw[7] || '';\r\n        taxon.used = !!raw[8];\r\n        taxon.sortOrder = raw[9];\r\n        taxon.parentIds = raw[10];\r\n        taxon.badVernacular = !!raw[11];\r\n\r\n        taxon.nationalStatus = {\r\n            GB: raw[12] || null,\r\n            IE: raw[13] || null,\r\n            CI: raw[14] || null\r\n        };\r\n\r\n        taxon.rareScarceStatus = {\r\n            GB: raw[15] || null,\r\n            IE: raw[16] || null\r\n        };\r\n\r\n        taxon.rprStatus = raw[Taxon.RPR_KEY] || null;\r\n\r\n        taxon.occurrenceCoverage = raw[Taxon.GR_PRESENCE_KEY] || null;\r\n\r\n        taxon.vcPresence = raw[Taxon.VC_PRESENCE_KEY] || null;\r\n\r\n        return taxon;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} vernacularMatched\r\n     * @returns {string}\r\n     */\r\n    formattedHTML(vernacularMatched) {\r\n        let acceptedTaxon;\r\n        if (this.id !== this.acceptedEntityId) {\r\n            acceptedTaxon = Taxon.fromId(this.acceptedEntityId);\r\n        }\r\n\r\n        if (Taxon.showVernacular) {\r\n            if (vernacularMatched) {\r\n                return (acceptedTaxon) ?\r\n                    `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>` +\r\n                    ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                    :\r\n                    `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n                    ;\r\n            } else {\r\n                return (acceptedTaxon) ?\r\n                    `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''\r\n                    } = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                    :\r\n                    `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''}`\r\n                    ;\r\n            }\r\n        } else {\r\n            return (acceptedTaxon) ?\r\n                `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>` +\r\n                ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                :\r\n                `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n                ;\r\n        }\r\n    }\r\n}\r\n","import {Model} from \"./Model\";\r\nimport {Taxon} from \"./Taxon\";\r\nimport {GridRef} from 'british-isles-gridrefs'\r\nimport {Survey} from \"./Survey\";\r\n\r\nexport class Occurrence extends Model {\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, *>}\r\n     */\r\n    attributes = {\r\n        // taxon: {\r\n        //     taxonId: '',\r\n        //     taxonName: '',\r\n        //     vernacularMatch: false\r\n        // }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    userId = '';\r\n\r\n    // /**\r\n    //  * set if the image has been posted to the server\r\n    //  * (a local copy might still exist, which may have been reduced to thumbnail resolution)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedRemotely = false;\r\n\r\n    // /**\r\n    //  * set if the image has been added to a temporary store (e.g. indexedDb)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedLocally = false;\r\n\r\n    SAVE_ENDPOINT = '/saveoccurrence.php';\r\n\r\n    TYPE = 'occurrence';\r\n\r\n    /**\r\n     * fired from Occurrence when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     * set if this is a new entry (before user has moved on to the next entry)\r\n     * influences whether form validation errors are displayed\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isNew = false;\r\n\r\n    /**\r\n     *\r\n     * @returns {(Taxon|null)} returns null for unmatched taxa specified by name\r\n     */\r\n    get taxon() {\r\n        return this.attributes.taxon?.taxonId ? Taxon.fromId(this.attributes.taxon.taxonId) : null;\r\n    };\r\n\r\n    // /**\r\n    //  *\r\n    //  * @param {OccurrenceForm} form\r\n    //  * @returns {OccurrenceForm}\r\n    //  */\r\n    // setForm(form) {\r\n    //     form.addListener(Form.CHANGE_EVENT, this.formChangedHandler.bind(this));\r\n    //\r\n    //     if (!this.isNew) {\r\n    //         form.liveValidation = true;\r\n    //     }\r\n    //     return form;\r\n    // }\r\n\r\n    /**\r\n     * called after the form has changed, before the values have been read back in to the occurrence\r\n     *\r\n     * @param {{form: Form}} params\r\n     */\r\n    formChangedHandler(params) {\r\n        console.log('Occurrence change handler invoked.');\r\n\r\n        // read new values\r\n        // then fire its own change event (Occurrence.EVENT_MODIFIED)\r\n        params.form.updateModelFromContent().then(() => {\r\n            // refresh the form's validation state\r\n            params.form.conditionallyValidateForm();\r\n\r\n            this.touch();\r\n            this.fireEvent(Occurrence.EVENT_MODIFIED, {occurrenceId: this.id});\r\n        });\r\n    }\r\n\r\n    delete() {\r\n        if (!this.deleted) {\r\n            this.touch();\r\n            this.deleted = true;\r\n\r\n            this.fireEvent(Occurrence.EVENT_MODIFIED, {occurrenceId : this.id});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If not securely saved then makes a post to /saveoccurrence.php\r\n     *\r\n     * This should be intercepted by a service worker, which could write the object to indexeddb\r\n     * A successful save (local or to server) will result in a json response containing the object\r\n     * and also the state of persistence.\r\n     *\r\n     * If saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the object directly to indexeddb\r\n     *\r\n     * Must test indexeddb for this eventuality after the save has returned.\r\n     *\r\n     * @param {string} [surveyId] only set if want to override, otherwise '' (*currently ignored and should be deprecated*)\r\n     * @param {boolean} [forceSave]\r\n     * @returns {Promise}\r\n     */\r\n    save(surveyId = '', forceSave = false) {\r\n        if (this.unsaved() || forceSave) {\r\n            const formData = new FormData;\r\n\r\n            // @todo potentially setting surveyId here seems like a serious design fault!\r\n            // if (!surveyId && this.surveyId) {\r\n            //     surveyId = this.surveyId;\r\n            // }\r\n\r\n            if (!this.surveyId) {\r\n                throw new Error(`Survey id must be set before saving an occurrence. Failed for occ id '${this.id}'`);\r\n            }\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.surveyId);\r\n            formData.append('occurrenceId', this.id);\r\n            formData.append('id', this.id); // this is incorrect duplication\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('modified', this.modifiedStamp?.toString() || '');\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log('queueing occurrence post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`Occurrence ${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{id : string, saveState: string, attributes: Object.<string, *>, deleted: boolean|string, created: number, modified: number, projectId: number, surveyId: string}} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n    }\r\n\r\n    /**\r\n     * returns interpreted grid-ref / vc summary, used to look-up meta-data for the taxon list\r\n     *\r\n     * @return {{\r\n     *     hectad : string,\r\n     *     tetrad : string,\r\n     *     monad : string,\r\n     *     country : string,\r\n     *     vc : int[],\r\n     *     interleavedGridRef : string,\r\n     * }}\r\n     */\r\n    getGeoContext() {\r\n        const geoRef = this.geoReference;\r\n\r\n        const result = {};\r\n\r\n        if (this.attributes.vc?.selection) {\r\n            result.vc = [...this.attributes.vc.selection]; // clone rather than reference the VC selection\r\n        } else {\r\n            result.vc = [];\r\n        }\r\n\r\n        if (geoRef?.gridRef) {\r\n            const gridRef = GridRef.fromString(geoRef.gridRef);\r\n\r\n            if (gridRef) {\r\n                if (gridRef.length <= 1000) {\r\n                    result.monad = gridRef.gridCoords.to_gridref(1000);\r\n                }\r\n\r\n                if (gridRef.length <= 2000) {\r\n                    result.tetrad = gridRef.gridCoords.to_gridref(2000);\r\n                }\r\n\r\n                result.country = gridRef.country;\r\n            }\r\n\r\n            result.hectad = gridRef.gridCoords.to_gridref(10000);\r\n\r\n            result.interleavedGridRef = GridRef.interleave(geoRef.gridRef);\r\n        }\r\n\r\n        return {...{hectad : '', tetrad : '', monad : '', country : '', vc : [], interleavedGridRef : ''}, ...result};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null), [defaultSurveyGridRef]: string}|null)}\r\n     */\r\n    get geoReference() {\r\n        return this.attributes.georef || {\r\n            gridRef: '',\r\n            rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n            source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n            latLng: null,\r\n            precision: null\r\n        };\r\n    };\r\n}\r\n","import {Model} from \"./Model\";\r\n\r\nexport class OccurrenceImage extends Model {\r\n\r\n    /**\r\n     * raw file object retrieved from a file upload image element\r\n     *\r\n     * @type {File}\r\n     */\r\n    file;\r\n\r\n    /**\r\n     *\r\n     * @type {Map.<string, OccurrenceImage>}\r\n     */\r\n    static imageCache = new Map;\r\n\r\n    TYPE = 'image';\r\n\r\n    /**\r\n     * Only relevant for occurrence-linked images\r\n     *\r\n     * @type {string}\r\n     */\r\n    occurrenceId = '';\r\n\r\n    surveyId = '';\r\n\r\n    //projectId = '';\r\n\r\n    context = 'occurrence';\r\n\r\n    /**\r\n     * fetches a URL of the image\r\n     * this might be a remote url (or one intercepted by a service worker)\r\n     * or a data url of the raw image, (not yet uploaded)\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getUrl () {\r\n        throw new Error('OccurrenceImage getUrl() not implemented.')\r\n    }\r\n\r\n    SAVE_ENDPOINT = '/saveimage.php';\r\n\r\n    /**\r\n     *\r\n     * @param {File} file\r\n     */\r\n    static fromFile(file) {\r\n        const image = new OccurrenceImage;\r\n        image.file = file;\r\n\r\n        return image;\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /saveimage.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexeddb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexeddb\r\n     *\r\n     * must test indexeddb for this eventuality after the save has returned\r\n     *\r\n     * @param {string} surveyId\r\n     * @param {string} occurrenceId\r\n     * @param {number|null} projectId\r\n     * @returns {Promise}\r\n     */\r\n    save(surveyId = '', occurrenceId = '', projectId = null) {\r\n        if (surveyId) {\r\n            this.surveyId = surveyId;\r\n        }\r\n\r\n        if (projectId) {\r\n            this.projectId = projectId;\r\n        }\r\n\r\n        if (occurrenceId) {\r\n            this.occurrenceId = occurrenceId;\r\n        }\r\n\r\n        if (this.unsaved()) {\r\n            const formData = new FormData;\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', surveyId ? surveyId : (this.surveyId ? this.surveyId : '')); // avoid 'undefined'\r\n            formData.append('projectId', projectId ? projectId.toString() : '');\r\n            formData.append('imageId', this.id);\r\n            formData.append('id', this.id);\r\n            formData.append('image', this.file);\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('modified', this.modifiedStamp?.toString() || '');\r\n\r\n            if (this.context === 'survey') {\r\n                formData.append('context', this.context);\r\n            } else {\r\n                formData.append('occurrenceId', occurrenceId ? occurrenceId : this.occurrenceId); // avoid 'undefined'\r\n            }\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log(`queueing image post, image id ${this.id}`);\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`Image ${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fired from Occurrence when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @returns {OccurrenceImage}\r\n     */\r\n    static placeholder(id) {\r\n        let placeholderObject = new OccurrenceImage;\r\n        //placeholderObject._id = id;\r\n        placeholderObject.id = id; // should use setter, to enforce validation\r\n\r\n        OccurrenceImage.imageCache.set(id, placeholderObject);\r\n\r\n        return placeholderObject;\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      [userId]: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: (number|string),\r\n     *      modified: (number|string),\r\n     *      projectId: (number|string),\r\n     *      surveyId: string,\r\n     *      occurrenceId: string,\r\n     *      [image]: File\r\n     *      [context]: string\r\n     *      }} descriptor\r\n     * @private\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n\r\n        if (descriptor.occurrenceId) {\r\n            this.occurrenceId = descriptor.occurrenceId;\r\n        }\r\n        this.file = descriptor.image;\r\n\r\n        if (descriptor.context) {\r\n            this.context = descriptor.context;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {(number|null)} width\r\n     * @param {(number|null)} height\r\n     * @param {{[className] : string}} [attributes]\r\n     * @return {string}\r\n     */\r\n    static imageLink(id, width, height, attributes) {\r\n        width = width || 0;\r\n        height = height || 0;\r\n\r\n        let attributesString = '';\r\n\r\n        if (attributes.className) {\r\n            attributesString += ` class=\"${attributes.className}\"`;\r\n        }\r\n\r\n        const renderingConstraint = (width > height) ?\r\n            `width=\"${width}\"`\r\n            :\r\n            `height=\"${height}\"`;\r\n\r\n        return `<picture><source srcset=\"/image.php?imageid=${id}&amp;height=128&amp;format=webp\" type=\"image/webp\"><img${attributesString} src=\"/image.php?imageid=${id}&amp;width=${width}&amp;height=${height}&amp;format=jpeg\" ${renderingConstraint} alt=\"photo\"></picture>`;\r\n    }\r\n}\r\n","import {Model} from \"../models/Model\";\r\n\r\nexport class Logger {\r\n\r\n    /**\r\n     * @type {App}\r\n     */\r\n    static app;\r\n\r\n    /**\r\n     * reports a javascript error\r\n     *\r\n     * @param {string} message\r\n     * @param {string|null} [url]\r\n     * @param {string|number|null} [line]\r\n     * @param {number|null} [column]\r\n     * @param {Error|null} [errorObj]\r\n     */\r\n    static logError = function(message, url = '', line= '', column = null, errorObj = null) {\r\n\r\n        window.onerror = null;\r\n\r\n        console.error(message, url, line, errorObj);\r\n\r\n        if (console.trace) {\r\n            console.trace('Trace');\r\n        }\r\n\r\n        const doc = document.implementation.createDocument('', 'response', null); // create blank XML response document\r\n        const error = doc.createElement('error');\r\n\r\n        if (line !== null && line !== undefined) {\r\n            error.setAttribute('line', line);\r\n        }\r\n\r\n        if (errorObj && ('stack' in errorObj)) {\r\n            error.setAttribute('stack', errorObj.stack);\r\n        }\r\n\r\n        if (url !== null && url !== undefined && url !== '') {\r\n            error.setAttribute('url', url);\r\n        }\r\n\r\n        if (window.location.href) {\r\n            error.setAttribute('referrer', window.location.href);\r\n        }\r\n\r\n        if (window.location.search) {\r\n            error.setAttribute('urlquery', window.location.search);\r\n        }\r\n\r\n        if (window.location.hash) {\r\n            error.setAttribute('urlhash', window.location.hash);\r\n        }\r\n\r\n        if (Logger.app?.session?.userId) {\r\n            error.setAttribute('userid', Logger.app.session.userId);\r\n        }\r\n\r\n        // noinspection PlatformDetectionJS\r\n        error.setAttribute('browser', navigator.appName);\r\n        error.setAttribute('browserv', navigator.appVersion);\r\n        error.setAttribute('userAgent', navigator.userAgent);\r\n        error.setAttribute('versions', Model.bsbiAppVersion);\r\n\r\n        error.appendChild(doc.createTextNode(message));\r\n\r\n        doc.documentElement.appendChild(error);\r\n\r\n        fetch('/javascriptErrorLog.php', {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"include\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"text/xml\",\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer-when-downgrade\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: (new XMLSerializer()).serializeToString(doc),\r\n        });\r\n\r\n        window.onerror = Logger.logError; // turn on error handling again\r\n        return true; // suppress normal error reporting\r\n    };\r\n}\r\n","// App.js\r\n// base class for single page application\r\n// allows binding of controllers and routes\r\nimport {EventHarness} from \"./EventHarness\";\r\nimport {Survey} from \"../models/Survey\";\r\nimport {InternalAppError} from \"../utils/exceptions/InternalAppError\";\r\nimport {Occurrence} from \"../models/Occurrence\";\r\nimport localforage from \"localforage\";\r\nimport {OccurrenceImage} from \"../models/OccurrenceImage\";\r\nimport {Logger} from \"../utils/Logger\";\r\nimport {uuid} from \"../models/Model\";\r\nimport {Track} from \"../models/Track\";\r\n\r\nexport class App extends EventHarness {\r\n    /**\r\n     * @type {PatchedNavigo}\r\n     */\r\n    _router;\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     */\r\n    _containerEl;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<AppController>}\r\n     */\r\n    controllers = [];\r\n\r\n    /**\r\n     * tracks the handle of the current page controller\r\n     * updating this is the responsibility of the controller\r\n     *\r\n     * @type {number|boolean}\r\n     */\r\n    currentControllerHandle = false;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<{url : string}>}\r\n     */\r\n    routeHistory = [];\r\n\r\n    /**\r\n     * keyed by occurrence id (a UUID string)\r\n     *\r\n     * @type {Map.<string,Occurrence>}\r\n     */\r\n    occurrences= new Map();\r\n\r\n    /**\r\n     * keyed by survey id (a UUID string)\r\n     *\r\n     * @type {Map.<string,Survey>}\r\n     */\r\n    surveys= new Map();\r\n\r\n    /**\r\n     * @type {?Survey}\r\n     */\r\n    _currentSurvey = null;\r\n\r\n    /**\r\n     * @abstract\r\n     * @type {number}\r\n     */\r\n    projectId;\r\n\r\n    /**\r\n     * Event fired when user requests a new blank survey\r\n     * @type {string}\r\n     */\r\n    static EVENT_ADD_SURVEY_USER_REQUEST = 'useraddsurveyrequest';\r\n\r\n    /**\r\n     * Event fired when user requests a reset (local clearance) of all surveys\r\n     * @type {string}\r\n     */\r\n    static EVENT_RESET_SURVEYS = 'userresetsurveys';\r\n\r\n    /**\r\n     * Fired after App.currentSurvey has been set to a new blank survey\r\n     * the survey will be accessible in App.currentSurvey\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_NEW_SURVEY = 'newsurvey';\r\n\r\n    static LOAD_SURVEYS_ENDPOINT = '/loadsurveys.php';\r\n\r\n    /**\r\n     * Fired when a brand-new occurrence is added\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_OCCURRENCE_ADDED = 'occurrenceadded';\r\n\r\n    /**\r\n     * Fired when a survey is retrieved from local storage\r\n     * parameter is {survey : Survey}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SURVEY_LOADED = 'surveyloaded';\r\n\r\n    /**\r\n     * Fired when an occurrence is retrieved from local storage or newly initialised\r\n     * parameter is {occurrence : Occurrence}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_OCCURRENCE_LOADED = 'occurrenceloaded';\r\n\r\n    static EVENT_CURRENT_OCCURRENCE_CHANGED = 'currentoccurrencechanged';\r\n\r\n    /**\r\n     * Fired when the selected current survey id is changed\r\n     * parameter is {newSurvey : Survey|null}\r\n     *\r\n     * (this is not fired for modification of the survey content)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_CURRENT_SURVEY_CHANGED = 'currentsurveychanged';\r\n\r\n    /**\r\n     * Fired if the surveys list might need updating (as a survey has been added, removed or changed)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SURVEYS_CHANGED = 'surveyschanged';\r\n\r\n    /**\r\n     * Fired after fully-successful sync-all\r\n     * (or if sync-all resolved with nothing to send)\r\n     *\r\n     * @todo this is misleading as in fact is fired when all saved to indexeddb or to server\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_ALL_SYNCED_TO_SERVER = 'allsyncedtoserver';\r\n\r\n    /**\r\n     * fired if sync-all called, but one or more objects failed to be stored\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SYNC_ALL_FAILED = 'syncallfailed';\r\n\r\n    static EVENT_USER_LOGIN = 'login';\r\n\r\n    static EVENT_USER_LOGOUT = 'logout';\r\n\r\n    /**\r\n     * Fired when watching of GPS has been granted following user request.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_WATCH_GPS_USER_REQUEST = 'watchgps';\r\n\r\n    static EVENT_CANCEL_WATCHED_GPS_USER_REQUEST = 'cancelgpswatch';\r\n\r\n    /**\r\n     * IndexedDb key used for storing id of current (last accessed) survey (or null)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static CURRENT_SURVEY_KEY_NAME = 'currentsurvey';\r\n    static SESSION_KEY_NAME = 'session';\r\n    static DEVICE_ID_KEY_NAME = 'deviceid';\r\n\r\n    static RESERVED_KEY_NAMES = [\r\n        App.CURRENT_SURVEY_KEY_NAME,\r\n        App.SESSION_KEY_NAME,\r\n        App.DEVICE_ID_KEY_NAME\r\n    ];\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static devMode = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {?Survey} survey\r\n     */\r\n    set currentSurvey(survey) {\r\n        if (this._currentSurvey !== survey) {\r\n            this._currentSurvey = survey || null;\r\n\r\n            let surveyId = survey?.id;\r\n            localforage.setItem(App.CURRENT_SURVEY_KEY_NAME, surveyId)\r\n                .then(() => {\r\n                    this.fireEvent(App.EVENT_CURRENT_SURVEY_CHANGED, {newSurvey: survey});\r\n                });\r\n        }\r\n    }\r\n\r\n    _deviceId = '';\r\n\r\n    /**\r\n     * @return Promise<string>\r\n     */\r\n    initialiseDeviceId() {\r\n        if (!this._deviceId) {\r\n            return localforage.getItem(App.DEVICE_ID_KEY_NAME)\r\n                .then((deviceId) => {\r\n                    if (deviceId) {\r\n                        this._deviceId = deviceId;\r\n                        return deviceId;\r\n                    } else {\r\n                        const deviceId = uuid();\r\n\r\n                        return localforage.setItem(App.DEVICE_ID_KEY_NAME, deviceId)\r\n                            .then(() => {\r\n                                this._deviceId = deviceId;\r\n                                return deviceId;\r\n                            })\r\n                    }\r\n                });\r\n        } else {\r\n            return Promise.resolve(this._deviceId);\r\n        }\r\n    }\r\n\r\n    get deviceId() {\r\n        if (!this._deviceId) {\r\n            throw new Error(\"Device ID has not been initialised.\");\r\n        }\r\n\r\n        return this._deviceId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @param value\r\n     * @returns {Promise<*>}\r\n     */\r\n    forageSetItem(key, value) {\r\n        return localforage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @returns {Promise<unknown | null>}\r\n     */\r\n    forageGetItem(key) {\r\n        return localforage.getItem(key);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @returns {Promise<unknown | null>}\r\n     */\r\n    forageRemoveItem(key) {\r\n        return localforage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {?Survey}\r\n     */\r\n    get currentSurvey() {\r\n        return this._currentSurvey;\r\n    }\r\n\r\n    /**\r\n     * note that the last survey might not belong to the current user\r\n     *\r\n     * @returns {Promise<string | null>}\r\n     */\r\n    getLastSurveyId() {\r\n        return localforage.getItem(App.CURRENT_SURVEY_KEY_NAME)\r\n            .catch((error) => {\r\n                console.log({'Error retrieving last survey id' : error});\r\n                return Promise.resolve(null);\r\n            });\r\n    }\r\n\r\n    clearLastSurveyId() {\r\n        return localforage.removeItem(App.CURRENT_SURVEY_KEY_NAME)\r\n            .catch((error) => {\r\n                console.log({'Error removing last survey id' : error});\r\n                return Promise.resolve(null);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @type {Layout}\r\n     */\r\n    layout;\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     */\r\n    setLocalForageName(name) {\r\n        localforage.config({\r\n            name: name\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<void | null>}\r\n     */\r\n    reset() {\r\n        this.surveys = new Map();\r\n        Track.reset();\r\n        return this.clearCurrentSurvey().then(this.clearLastSurveyId);\r\n\r\n        // if (false) {\r\n        //     // currently disabled during testing to minimise data loss potential\r\n        //     this.surveys = new Map();\r\n        //     return this.clearCurrentSurvey().then(this.clearLastSurveyId);\r\n        // } else {\r\n        //     return Promise.resolve();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * unset the current survey and its associated list of occurrences\r\n     * called when switching surveys and during startup\r\n     *\r\n     * updates local storage last saved survey id\r\n     *\r\n     * @returns {Promise<void | null>}\r\n     */\r\n    clearCurrentSurvey() {\r\n        this.occurrences = new Map();\r\n        this._currentSurvey = null; // must not use setter here otherwise local storage saved previous id will be lost\r\n        return this.clearLastSurveyId();\r\n    }\r\n\r\n    /**\r\n     * see https://github.com/krasimir/navigo\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    set router(router) {\r\n        this._router = router;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {PatchedNavigo}\r\n     */\r\n    get router() {\r\n        return this._router;\r\n    }\r\n\r\n    set containerId(containerId) {\r\n        const el = document.getElementById(containerId);\r\n        if (!el) {\r\n            throw new Error(`App container '${containerId}' not found.`);\r\n        } else {\r\n            this._containerEl = el;\r\n        }\r\n    }\r\n\r\n    get container() {\r\n        return this._containerEl;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {AppController} controller\r\n     */\r\n    registerController(controller) {\r\n        controller.handle = this.controllers.length;\r\n        this.controllers[this.controllers.length] = controller;\r\n\r\n        controller.app = this;\r\n        controller.registerRoute(this._router);\r\n    }\r\n\r\n    initialise() {\r\n        //Page.initialise_layout(this._containerEl);\r\n        this.layout.initialise();\r\n\r\n        this._router.notFound((query) => {\r\n            // called when there is path specified but\r\n            // there is no route matching\r\n\r\n            console.log(`no route found for '${query}'`);\r\n            //this._router.navigate('/list');\r\n\r\n            // const view = new NotFoundView();\r\n            // view.display();\r\n            this.notFoundView();\r\n        });\r\n\r\n        //default homepage\r\n        this._router.on(() => {\r\n            // special-case redirect (replacing in history) from '/' to '/list' without updating browser history\r\n\r\n            console.log(\"redirecting from '/' to '/list'\");\r\n\r\n            this._router.pause();\r\n\r\n            if (this.currentSurvey && this.currentSurvey.isPristine) {\r\n                this._router.navigate('/list/survey/welcome').resume();\r\n            } else {\r\n                this._router.navigate('/list').resume();\r\n            }\r\n            this._router.resolve();\r\n        });\r\n\r\n        for (let controller of this.controllers) {\r\n            controller.initialise();\r\n        }\r\n    }\r\n\r\n    display() {\r\n        //console.log('App display');\r\n\r\n        // it's opportune at this point to try to ping the server again to save anything left outstanding\r\n        this.syncAll(true).then(() => {\r\n            this._router.resolve();\r\n        });\r\n    }\r\n\r\n    saveRoute() {\r\n        const lastRoute = this._router.lastRouteResolved();\r\n        if (this.routeHistory.length) {\r\n            if (this.routeHistory[this.routeHistory.length - 1] !== lastRoute) {\r\n                this.routeHistory[this.routeHistory.length] = lastRoute;\r\n            }\r\n        } else {\r\n            this.routeHistory[0] = lastRoute;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mark the current survey and its constituent records as subject to validation checks (not pristine)\r\n     */\r\n    markAllNotPristine() {\r\n        for (let occurrenceTuple of this.occurrences) {\r\n            occurrenceTuple[1].isPristine = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Layout} layout\r\n     */\r\n    setLayout(layout) {\r\n        this.layout = layout;\r\n        layout.setApp(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Survey} survey\r\n     */\r\n    addSurvey(survey) {\r\n        if (survey.projectId !== this.projectId) {\r\n            throw new Error(`Survey project id '${survey.projectId} does not match with current project ('${this.projectId}')`);\r\n        }\r\n\r\n        if (!survey.hasAppModifiedListener) {\r\n            survey.hasAppModifiedListener = true;\r\n\r\n            //console.log(\"setting survey's modified/save handler\");\r\n            survey.addListener(\r\n                Survey.EVENT_MODIFIED,\r\n                () => {\r\n                    survey.save().finally(() => {\r\n                        this.fireEvent(App.EVENT_SURVEYS_CHANGED);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n\r\n        this.surveys.set(survey.id, survey);\r\n        this.fireEvent(App.EVENT_SURVEYS_CHANGED);\r\n    }\r\n\r\n    /**\r\n     * tests whether occurrences have been defined, excluding any that have been deleted\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    haveExtantOccurrences() {\r\n        for (let occurrence of this.occurrences) {\r\n            if (!occurrence.deleted) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Occurrence} occurrence\r\n     */\r\n    addOccurrence(occurrence) {\r\n        if (!occurrence.surveyId) {\r\n            throw new InternalAppError('Survey id must set prior to registering occurrence.');\r\n        }\r\n\r\n\r\n        // set the survey creation stamp to match the earliest extant occurrence\r\n        // this avoids anomalies where a 'stale' survey created when the form was first opened but not used sits around\r\n        // for a protracted period\r\n\r\n        const survey = this.surveys.get(occurrence.surveyId);\r\n        if (!survey) {\r\n            throw new Error(`Failed to look up survey id ${occurrence.surveyId}`);\r\n        }\r\n\r\n        if (occurrence.createdStamp &&\r\n            (this.occurrences.size === 0 || survey.createdStamp > occurrence.createdStamp)) {\r\n\r\n            survey.createdStamp = occurrence.createdStamp;\r\n        }\r\n        //console.log(`in addOccurrence setting id '${occurrence.id}'`);\r\n        this.occurrences.set(occurrence.id, occurrence);\r\n\r\n        occurrence.addListener(Occurrence.EVENT_MODIFIED,\r\n            // possibly this should be async, with await on the survey and occurrence save\r\n            () => {\r\n                const survey = this.surveys.get(occurrence.surveyId);\r\n                if (!survey) {\r\n                    throw new Error(`Failed to look up survey id ${occurrence.surveyId}`);\r\n                } else {\r\n                    survey.isPristine = false;\r\n\r\n                    // need to ensure that currentSurvey is saved before occurrence\r\n                    // rather than using a promise chain here, instead rely on enforced queuing of post requests in Model\r\n                    // otherwise there are problems with queue-jumping (e.g. when an image needs to be saved after both previous requests)\r\n                    // if (survey.unsaved()) {\r\n                    //     // noinspection JSIgnoredPromiseFromCall\r\n                    //     survey.save();\r\n                    // }\r\n\r\n                    // against a backdrop where surveys are somehow going unsaved, always force a survey re-save\r\n                    // @todo need to watch if this is creating a mess of identical survey revisions\r\n                    survey.save(true);\r\n\r\n                    occurrence.save().finally(() => {\r\n                        survey.fireEvent(Survey.EVENT_OCCURRENCES_CHANGED, {occurrenceId: occurrence.id});\r\n                    });\r\n                }\r\n            });\r\n\r\n        this.fireEvent(App.EVENT_OCCURRENCE_LOADED, {occurrence: occurrence});\r\n    }\r\n\r\n    /**\r\n     * attempts to refresh the state of local storage for the specified survey ids\r\n     * if fetch fails then return a failed promise\r\n     *\r\n     * updates local copy of surveys and occurrences\r\n     *\r\n     * no service worker interception of this call - passed through and not cached\r\n     *\r\n     * @param {Array.<string>} surveyIds\r\n     * @return {Promise}\r\n     */\r\n    refreshFromServer(surveyIds) {\r\n        console.log({'Refresh from server, ids' : surveyIds});\r\n        const formData = new FormData;\r\n\r\n        let n = 0;\r\n        for (let key of surveyIds) {\r\n            if (key && key !== 'undefined') {\r\n                formData.append(`surveyId[${n++}]`, key);\r\n            }\r\n        }\r\n\r\n        if (this.session?.userId) {\r\n            formData.append('userId', this.session.userId);\r\n        }\r\n\r\n        return fetch(App.LOAD_SURVEYS_ENDPOINT, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(`Invalid response from server when refreshing survey ids`);\r\n            }\r\n        }).then((jsonResponse) => {\r\n            /** @param {{survey : Array.<object>, occurrence: Array.<object>, image: Array.<object>}} jsonResponse */\r\n\r\n            console.log({'refresh from server json response' : jsonResponse});\r\n\r\n            // if external objects newer than local version then place in local storage\r\n            const promises = [];\r\n\r\n            for (let type in jsonResponse) {\r\n                if (jsonResponse.hasOwnProperty(type)) {\r\n                    for (let object of jsonResponse[type]) {\r\n                        promises.push(this._conditionallyReplaceObject(object));\r\n                    }\r\n                }\r\n            }\r\n\r\n            return Promise.all(promises);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * compare modified stamp of indexeddb and external objects and write external version locally if more recent\r\n     *\r\n     * @param {{id : string, type : string, modified : number, created : number, saveState : string, deleted : boolean}} externalVersion\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _conditionallyReplaceObject(externalVersion) {\r\n        const objectType = externalVersion.type;\r\n        const id = externalVersion.id;\r\n        const key = `${objectType}.${id}`;\r\n\r\n        return localforage.getItem(key)\r\n            .then((localVersion) => {\r\n                if (localVersion) {\r\n                    // compare stamps\r\n\r\n                    // if (externalVersion.deleted) {\r\n                    //     // if the external copy is deleted then remove the local copy\r\n                    //     return localforage.removeItem(key);\r\n                    // }\r\n\r\n                    if (!externalVersion.deleted && localVersion.modified >= externalVersion.modified) {\r\n                        console.info(`Local copy of ${key} is the same or newer than the server copy. (${localVersion.modified} >= ${externalVersion.modified}) `);\r\n                        return Promise.resolve();\r\n                    }\r\n                }\r\n\r\n                // no local copy or stale copy\r\n                // so store response locally\r\n                console.info(`Adding or replacing local copy of ${key}`);\r\n                return localforage.setItem(key, externalVersion);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * retrieve the full set of keys from local storage (IndexedDb)\r\n     *\r\n     * @param {{survey: Array<string>, occurrence : Array<string>, image: Array<string>, [track]: Array<string>}} storedObjectKeys\r\n     * @returns {Promise<{survey: Array<string>, occurrence: Array<string>, image: Array<string>, [track]: Array<string>}>}\r\n     */\r\n    seekKeys(storedObjectKeys) {\r\n        //console.log('starting seekKeys');\r\n\r\n        return localforage.keys().then((keys) => {\r\n            //console.log({\"in seekKeys: local forage keys\" : keys});\r\n\r\n            for (let key of keys) {\r\n                //if (key !== App.CURRENT_SURVEY_KEY_NAME && key !== App.SESSION_KEY_NAME) {\r\n                if (!App.RESERVED_KEY_NAMES.includes(key)) {\r\n                    let type, id;\r\n\r\n                    [type, id] = key.split('.', 2);\r\n\r\n                    if (storedObjectKeys.hasOwnProperty(type)) {\r\n                        if (!storedObjectKeys[type].includes(id)) {\r\n                            storedObjectKeys[type].push(id);\r\n                        }\r\n                    } else {\r\n                        // 'track' records not always wanted here, but not an error\r\n                        if (type !== 'track') {\r\n                            console.error(`Unrecognised stored key type '${type}.`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return storedObjectKeys;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} fastReturn If set then the promise returns more quickly once the saves have been queued but not all effected\r\n     * This should allow surveys to be switched etc. without disrupting the ongoing save process.\r\n     * @returns {Promise}\r\n     */\r\n    syncAll(fastReturn = true) {\r\n        const storedObjectKeys = {\r\n            survey : [],\r\n            occurrence : [],\r\n            image : [],\r\n            track : [],\r\n        };\r\n\r\n        return this.seekKeys(storedObjectKeys)\r\n            .then((storedObjectKeys) => {\r\n                return this._syncLocalUnsaved(storedObjectKeys, fastReturn)\r\n                    .then((result) => {\r\n                        if (!fastReturn) {\r\n                            // Can only trigger the event once the whole process is complete, rather than after\r\n                            // a short-cut fast return.\r\n                            this.fireEvent(App.EVENT_ALL_SYNCED_TO_SERVER);\r\n                        }\r\n\r\n                        return result;\r\n                    });\r\n            }, (failedResult) => {\r\n                console.error(`Failed to sync all: ${failedResult}`);\r\n                Logger.logError(`Failed to sync all: ${failedResult}`);\r\n                this.fireEvent(App.EVENT_SYNC_ALL_FAILED);\r\n                return false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} [queryFilters.structuredSurvey]\r\n     * @param {boolean} [queryFilters.isToday]\r\n     * @param {string} [queryFilters.monad]\r\n     * @param {string} [queryFilters.tetrad]\r\n     * @param {string} [queryFilters.sampleUnit]\r\n     * @param {string} [queryFilters.userId]\r\n     * @param {string} [queryFilters.date]\r\n     * @param {string} [queryFilters.excludeSurveyId]\r\n     * @param {boolean} [queryFilters.defaultCasual]\r\n     * @returns {Array<Survey>}\r\n     */\r\n    queryLocalSurveys(queryFilters) {\r\n        const matches = [];\r\n\r\n        for (const surveyTuple of this.surveys) {\r\n            const survey = surveyTuple[1];\r\n\r\n            if (queryFilters.structuredSurvey && survey.attributes.casual) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.defaultCasual && !survey.attributes.defaultCasual) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.isToday && !survey.isToday()) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.monad && survey.getGeoContext()?.monad !== queryFilters.monad) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.tetrad && survey.getGeoContext()?.tetrad !== queryFilters.tetrad) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.sampleUnit && survey.attributes?.sampleUnit?.selection[0] !== queryFilters.sampleUnit) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.hasOwnProperty('userId') && queryFilters.userId !== survey.userId) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.excludeSurveyId === survey.id) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.date && queryFilters.date !== survey.date) {\r\n                continue;\r\n            }\r\n\r\n\r\n\r\n            matches[matches.length] = survey;\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{survey : Array<string>, occurrence : Array<string>, image : Array<string>}} storedObjectKeys\r\n     * @param {boolean} fastReturn default false\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _syncLocalUnsaved(storedObjectKeys, fastReturn = false) {\r\n        // synchronises surveys first, then occurrences, then images from indexedDb\r\n\r\n        const promises = [];\r\n\r\n        if (fastReturn) {\r\n            // as shortcut queue an already resolved promise, so that later Promise.race returns immediately.\r\n            promises[0] = Promise.resolve(true);\r\n        }\r\n\r\n        for(let surveyKey of storedObjectKeys.survey) {\r\n            promises.push(Survey.retrieveFromLocal(surveyKey, new Survey)\r\n                .then((/** Survey */ survey) => {\r\n                    if (survey.unsaved()) { //} || this.session?.userId === '2cd4p9h.31ecsw') {\r\n                        return survey.save(true);\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        for(let occurrenceKey of storedObjectKeys.occurrence) {\r\n            promises.push(Occurrence.retrieveFromLocal(occurrenceKey, new Occurrence)\r\n                .then((/** Occurrence */ occurrence) => {\r\n                    if (occurrence.unsaved()) { // || this.session?.userId === '2cd4p9h.31ecsw') {\r\n                        return occurrence.save('', true);\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        for(let imageKey of storedObjectKeys.image) {\r\n            promises.push(OccurrenceImage.retrieveFromLocal(imageKey, new OccurrenceImage)\r\n                .then((/** OccurrenceImage */ image) => {\r\n                    if (image.unsaved()) {\r\n                        return image.save();\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        if (fastReturn) {\r\n            // this will return near instantaneously as there is an already resolved promise at the head of the array\r\n            // the other promises will continue to resolve\r\n            return Promise.race(promises);\r\n        } else {\r\n            return Promise.all(promises).catch((result) => {\r\n                console.log(`Save failure: ${result}`);\r\n                return Promise.reject(result); // pass on the failed save (catch was only for logging, not to allow subsequent success)\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * restore previous state, pulling back from local and external store\r\n     * @todo this needs a save phase, so that local changes are saved back to the server\r\n     *\r\n     * @param {string} [targetSurveyId] if specified then select this id as the current survey\r\n     * @param {boolean} [neverAddBlank] if set then don't add a new blank survey if none available, default false\r\n     * @return {Promise}\r\n     */\r\n    restoreOccurrences(targetSurveyId = '', neverAddBlank = false) {\r\n        console.log(`Invoked restoreOccurrences, target survey id: ${targetSurveyId}`);\r\n\r\n        if (targetSurveyId === 'undefined') {\r\n            console.error(`Attempt to restore occurrences for literal 'undefined' survey id.`);\r\n            targetSurveyId = '';\r\n        }\r\n\r\n        return (targetSurveyId) ?\r\n            this._restoreOccurrenceImp(targetSurveyId, neverAddBlank)\r\n            :\r\n            this.getLastSurveyId().then(\r\n                (lastSurveyId) => {\r\n                    console.log(`Retrieved last used survey id '${lastSurveyId}'`);\r\n\r\n                    return this._restoreOccurrenceImp(lastSurveyId, neverAddBlank).catch(() => {\r\n                        console.log(`Failed to retrieve lastSurveyId ${lastSurveyId}. Resetting current survey and retrying.`);\r\n\r\n                        this.currentSurvey = null;\r\n                        return this._restoreOccurrenceImp('', neverAddBlank);\r\n                    });\r\n                },\r\n                // probably can't reach this catch phase\r\n                () => this._restoreOccurrenceImp('', neverAddBlank)\r\n            );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} [targetSurveyId] default ''\r\n     * @param {boolean} [neverAddBlank] if set then don't add a new blank survey if none available, default false\r\n     * @returns {Promise<void>|Promise<unknown>}\r\n     * @protected\r\n     */\r\n    _restoreOccurrenceImp(targetSurveyId = '', neverAddBlank = false) {\r\n        // need to check for a special case where restoring a survey that has never been saved even locally\r\n        // i.e. new and unmodified\r\n        // only present in current App.surveys\r\n        // this occurs if user creates a new survey, makes no changes, switches away from it then switches back\r\n        if (targetSurveyId && this.surveys.has(targetSurveyId)) {\r\n            const localSurvey = this.surveys.get(targetSurveyId);\r\n\r\n            if (localSurvey.isPristine) {\r\n                // clear occurrences from the previous survey\r\n                return this.clearCurrentSurvey().then(() => {\r\n                    this.currentSurvey = localSurvey;\r\n                    this.fireEvent(App.EVENT_SURVEYS_CHANGED); // current survey should be set now, so menu needs refresh\r\n                    return Promise.resolve();\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @type {{image: Array<string>, survey: Array<string>, occurrence: Array<string>}}\r\n         */\r\n        const storedObjectKeys = {\r\n            survey: [],\r\n            occurrence: [],\r\n            image: []\r\n        };\r\n\r\n        if (targetSurveyId) {\r\n            storedObjectKeys.survey[0] = targetSurveyId;\r\n        }\r\n\r\n        return this.clearCurrentSurvey().then(() => this.seekKeys(storedObjectKeys)).then((storedObjectKeys) => {\r\n            if (storedObjectKeys.survey.length || this.session?.userId) {\r\n                return this.refreshFromServer(storedObjectKeys.survey).finally(() => {\r\n                    // re-seek keys from indexed db, to take account of any new occurrences received from the server\r\n                    return this.seekKeys(storedObjectKeys);\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }).finally(() => {\r\n            // called regardless of whether a server refresh was successful\r\n            // storedObjectKeys and indexed db should be as up-to-date as possible\r\n\r\n            console.log({storedObjectKeys});\r\n\r\n            if (storedObjectKeys?.survey?.length) {\r\n\r\n                const surveyFetchingPromises = [];\r\n                let n = 0;\r\n\r\n                for (let surveyKey of storedObjectKeys.survey) {\r\n                    // arbitrarily set first survey key as current if a target id hasn't been specified\r\n\r\n                    surveyFetchingPromises.push(\r\n                        this._restoreSurveyFromLocal(surveyKey, storedObjectKeys, (targetSurveyId === surveyKey) || (!targetSurveyId && n++ === 0))\r\n                    );\r\n                }\r\n\r\n                return Promise.all(surveyFetchingPromises)\r\n                    .finally(() => {\r\n                        //this.currentSurvey = this.surveys.get(storedObjectKeys.survey[0]);\r\n\r\n                        if (!this.currentSurvey && neverAddBlank) {\r\n                            // survey doesn't actually exist\r\n                            // this could have happened in an invalid survey id was provided as a targetSurveyId\r\n                            console.log(`Failed to retrieve survey id '${targetSurveyId}'`);\r\n                            return Promise.reject(new Error(`Failed to retrieve survey id '${targetSurveyId}'`));\r\n                        }\r\n\r\n                        if (this.currentSurvey?.deleted) {\r\n                            // unusual case where survey is deleted or was not found\r\n                            // substitute a new one\r\n\r\n                            // this should probably never happen, as items deleted on the server ought to have been\r\n                            // removed locally\r\n                            this.currentSurvey = null;\r\n                            if (neverAddBlank) {\r\n                                return Promise.reject(new Error(`Survey id '${targetSurveyId}' ${this.currentSurvey?.deleted ? 'is deleted' : 'not found'}.`));\r\n                            } else {\r\n                                this.setNewSurvey();\r\n                            }\r\n                        }\r\n\r\n                        this.fireEvent(App.EVENT_SURVEYS_CHANGED); // current survey should be set now, so menu needs refresh\r\n                        this.currentSurvey?.fireEvent(Survey.EVENT_OCCURRENCES_CHANGED);\r\n                        this.currentSurvey?.fireEvent(Survey.EVENT_LIST_LENGTH_CHANGED);\r\n\r\n                        return Promise.resolve();\r\n                    });\r\n            } else {\r\n                // no pre-existing surveys\r\n\r\n                if (neverAddBlank) {\r\n                    console.log('no pre-existing survey');\r\n                    this.fireEvent(App.EVENT_SURVEYS_CHANGED); // survey menu needs refresh\r\n                    return Promise.reject(new Error(`Failed to match survey.`));\r\n                } else {\r\n                    console.log('no pre-existing surveys, so creating a new one');\r\n                    this.setNewSurvey(); // this also fires EVENT_SURVEYS_CHANGED\r\n                    return Promise.resolve();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}|null} [attributes]\r\n     */\r\n    setNewSurvey(attributes) {\r\n        const newSurvey = new Survey();\r\n\r\n        newSurvey.id; // trigger id initialisation\r\n\r\n        if (attributes) {\r\n            newSurvey.attributes = {...newSurvey.attributes, ...attributes};\r\n        }\r\n\r\n        newSurvey.projectId = this.projectId;\r\n        newSurvey.isPristine = true;\r\n        newSurvey.isNew = true;\r\n\r\n        if (this.session?.userId) {\r\n            newSurvey.userId = this.session.userId;\r\n        }\r\n\r\n        // Important: don't set this.currentSurvey until default attributes have been set,\r\n        // as currentSurvey setter fires an event that may depend on these attributes\r\n        this.currentSurvey = newSurvey;\r\n        this.addSurvey(newSurvey);\r\n        this.fireEvent(App.EVENT_NEW_SURVEY);\r\n    }\r\n\r\n    /**\r\n     * Add and set a *new* survey\r\n     *\r\n     * @param survey\r\n     */\r\n    addAndSetSurvey(survey) {\r\n        this.currentSurvey = survey;\r\n        this.addSurvey(survey);\r\n        this.fireEvent(App.EVENT_NEW_SURVEY);\r\n    }\r\n\r\n    /**\r\n     * Note that if attributes are set here, then the occurrence is regarded as changed and unsaved, rather than pristine\r\n     * i.e. attributes setting here is *not* intended as a way to set defaults\r\n     *\r\n     * @param {{}|null} [attributes]\r\n     * @param {{}|null} [pristineAttributes] additional attributes, that if set, don't count as edits\r\n     * @return {Occurrence}\r\n     */\r\n    addNewOccurrence(attributes, pristineAttributes) {\r\n        const occurrence = new Occurrence();\r\n        const currentSurvey = this.currentSurvey; // avoid too many getter lookups\r\n\r\n        if (!currentSurvey) {\r\n            throw new Error(`Current survey unset when adding new occurrence.`);\r\n        }\r\n\r\n        occurrence.id; // force initialisation of occurrence id\r\n        occurrence.surveyId = currentSurvey.id;\r\n        occurrence.projectId = this.projectId;\r\n\r\n        if (currentSurvey.userId) {\r\n            occurrence.userId = currentSurvey.userId;\r\n        }\r\n\r\n        occurrence.isNew = true;\r\n        occurrence.isPristine = true;\r\n\r\n        if (attributes && Object.keys(attributes).length) {\r\n            occurrence.attributes = {...occurrence.attributes, ...attributes};\r\n            occurrence.touch(); // now no longer pristine\r\n        }\r\n\r\n        if (pristineAttributes && Object.keys(pristineAttributes).length) {\r\n            // unlike above, setting these doesn't affect the modified state of the object\r\n            occurrence.attributes = {...occurrence.attributes, ...pristineAttributes};\r\n        }\r\n\r\n        this.addOccurrence(occurrence);\r\n\r\n        currentSurvey.extantOccurrenceKeys.add(occurrence.id);\r\n\r\n        this.fireEvent(App.EVENT_OCCURRENCE_ADDED, {occurrenceId: occurrence.id, surveyId: occurrence.surveyId});\r\n\r\n        currentSurvey.fireEvent(Survey.EVENT_OCCURRENCES_CHANGED, {occurrenceId : occurrence.id});\r\n        currentSurvey.fireEvent(Survey.EVENT_LIST_LENGTH_CHANGED);\r\n\r\n        // occurrence modified event fired to ensure that the occurrence is saved\r\n        occurrence.fireEvent(Occurrence.EVENT_MODIFIED);\r\n\r\n        return occurrence;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} surveyId\r\n     * @param {{survey: Array, occurrence: Array, image: Array}} storedObjectKeys\r\n     * @param {boolean} setAsCurrent\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _restoreSurveyFromLocal(surveyId, storedObjectKeys, setAsCurrent) {\r\n        // retrieve surveys first, then occurrences, then images from indexedDb\r\n\r\n        let userIdFilter = this.session?.userId;\r\n\r\n        let promise = Survey.retrieveFromLocal(surveyId, new Survey).then((survey) => {\r\n            console.log(`retrieving local survey ${surveyId}`);\r\n\r\n            this.fireEvent(App.EVENT_SURVEY_LOADED, {survey}); // provides a hook point in case any attributes need to be re-initialised\r\n\r\n            if ((!userIdFilter && !survey.userId) || survey.userId === userIdFilter || this.session?.superAdmin) {\r\n                if (setAsCurrent) {\r\n                    // the apps occurrences should only relate to the current survey\r\n                    // (the reset records are remote or in IndexedDb)\r\n                    return this.clearCurrentSurvey().then(() => {\r\n                        this.addSurvey(survey);\r\n                        const occurrenceFetchingPromises = [];\r\n\r\n                        for (let occurrenceKey of storedObjectKeys.occurrence) {\r\n                            occurrenceFetchingPromises.push(Occurrence.retrieveFromLocal(occurrenceKey, new Occurrence)\r\n                                .then((occurrence) => {\r\n                                    if (occurrence.surveyId === surveyId) {\r\n                                        //console.log(`adding occurrence ${occurrenceKey}`);\r\n                                        this.addOccurrence(occurrence);\r\n\r\n                                        survey.extantOccurrenceKeys.add(occurrence.id);\r\n                                    } else {\r\n                                        // not part of current survey but should still add to key list for counting purposes\r\n\r\n                                        this.surveys.get(occurrence.surveyId)?.extantOccurrenceKeys?.add(occurrence.id);\r\n                                    }\r\n\r\n                                }));\r\n                        }\r\n\r\n                        return Promise.all(occurrenceFetchingPromises);\r\n                    });\r\n                } else {\r\n                    // not the current survey, so just add it but don't load occurrences\r\n                    this.addSurvey(survey);\r\n                }\r\n            } else {\r\n                console.log(`Skipping survey id ${survey.id} that belongs to user ${survey.userId}`);\r\n            }\r\n        });\r\n\r\n        if (setAsCurrent) {\r\n            promise.finally(() => {\r\n                //console.log('Reached image fetching part');\r\n                const imageFetchingPromises = [];\r\n\r\n                for (let occurrenceImageKey of storedObjectKeys.image) {\r\n                    imageFetchingPromises.push(OccurrenceImage.retrieveFromLocal(occurrenceImageKey, new OccurrenceImage)\r\n                        .then((occurrenceImage) => {\r\n                            console.log(`restoring image id '${occurrenceImageKey}'`);\r\n\r\n                            if (occurrenceImage.surveyId === surveyId) {\r\n                                OccurrenceImage.imageCache.set(occurrenceImageKey, occurrenceImage);\r\n                            }\r\n                        }, (reason) => {\r\n                            console.log(`Failed to retrieve an image: ${reason}`);\r\n                        }));\r\n                }\r\n\r\n                this.currentSurvey = this.surveys.get(storedObjectKeys.survey[0]) || null;\r\n\r\n                // if the target survey belonged to a different user then could be undefined here\r\n\r\n                return this.currentSurvey ? Promise.all(imageFetchingPromises) : Promise.resolve();\r\n            });\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    clearLocalForage() {\r\n        return localforage.clear();\r\n    }\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n    notFoundView() {\r\n        // const view = new NotFoundView();\r\n        // view.display();\r\n    }\r\n}\r\n\r\n","// SurveyPickerController\r\n//\r\n\r\nimport {AppController} from './AppController';\r\nimport {NotFoundError} from \"../utils/exceptions/NotFoundError\";\r\nimport {UUID_REGEX} from \"../models/Model\";\r\nimport {App} from \"../framework/App\";\r\n\r\nexport class SurveyPickerController extends AppController {\r\n    route = '/survey/:action/:id';\r\n\r\n    static EVENT_BACK = 'back';\r\n\r\n    title = 'Survey picker';\r\n\r\n    /**\r\n     *\r\n     * @type {SurveyPickerView}\r\n     */\r\n    view;\r\n\r\n    /**\r\n     *\r\n     * @returns {Survey}\r\n     */\r\n    get survey() {\r\n        return this.app.currentSurvey;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {SurveyPickerView} view\r\n     */\r\n    constructor (view) {\r\n        super();\r\n\r\n        this.view = view;\r\n        view.controller = this;\r\n\r\n        this.handle = AppController.nextHandle;\r\n    }\r\n\r\n    /**\r\n     * registers the default route from this.route\r\n     * or alternatively is overridden in a child class\r\n     *\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    registerRoute(router) {\r\n        // router.on(\r\n        //     '/survey',\r\n        //     this.mainRouteHandler.bind(this, 'survey', '', ''),\r\n        //     {\r\n        //         // before : this.beforeRouteHandler ? this.beforeRouteHandler.bind(this) : null,\r\n        //         // after : this.afterRouteHandler ? this.afterRouteHandler.bind(this) : null,\r\n        //         // leave : this.leaveRouteHandler ? this.leaveRouteHandler.bind(this) : null,\r\n        //         // already : this.alreadyRouteHandler ? this.alreadyRouteHandler.bind(this) : null\r\n        //     }\r\n        // );\r\n\r\n        router.on(\r\n            '/survey/new',\r\n            this.newSurveyHandler.bind(this, 'survey', 'new', ''),\r\n            {\r\n                before : this.beforeNewHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/reset',\r\n            this.mainRouteHandler.bind(this, 'survey', 'reset', ''),\r\n            {\r\n                before : this.beforeResetHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/save',\r\n            this.mainRouteHandler.bind(this, 'survey', 'save', ''),\r\n            {\r\n                before : this.beforeSaveAllHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/add/:surveyId/:occurrenceId',\r\n            this.addSurveyHandler.bind(this, 'survey', 'add', '')\r\n        );\r\n\r\n        router.on(\r\n            '/survey/add/:surveyId',\r\n            this.addSurveyHandler.bind(this, 'survey', 'add', '')\r\n        );\r\n\r\n\r\n\r\n        this.app.addListener(App.EVENT_ADD_SURVEY_USER_REQUEST, this.addNewSurveyHandler.bind(this));\r\n        this.app.addListener(App.EVENT_RESET_SURVEYS, this.resetSurveysHandler.bind(this));\r\n    }\r\n\r\n    beforeNewHandler(done) {\r\n        this.view.newSurveyDialog();\r\n\r\n        this.app.router.pause();\r\n\r\n        console.log({'route history' : this.app.routeHistory});\r\n\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    beforeResetHandler(done) {\r\n        this.view.showResetDialog();\r\n\r\n        this.app.router.pause();\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    beforeSaveAllHandler(done) {\r\n        // invoke sync of any/all unsaved data\r\n        // show pop-ups on success and failure\r\n        this.app.syncAll(false).then((result) => {\r\n            console.log({'In save all handler, success result' : result});\r\n\r\n            if (Array.isArray(result)) {\r\n                this.view.showSaveAllSuccess();\r\n            } else {\r\n                this.view.showSaveAllFailure();\r\n            }\r\n        }, (result) => {\r\n            console.log({'In save all handler, failure result' : result});\r\n            this.view.showSaveAllFailure();\r\n        }).finally(() => {\r\n            // stop the spinner\r\n\r\n        });\r\n\r\n        this.app.router.pause();\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('new'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    newSurveyHandler(context, subcontext, rhs, queryParameters) {\r\n        // should not get here, as beforeNewHandler ought to have been invoked first\r\n    }\r\n\r\n    /**\r\n     * called after user has confirmed add new survey dialog box\r\n     *\r\n     */\r\n    addNewSurveyHandler() {\r\n        console.log(\"reached addNewSurveyHandler\");\r\n        this.app.currentControllerHandle = this.handle; // when navigate back need to list need to ensure full view refresh\r\n\r\n        // it's opportune at this point to try to ping the server again to save anything left outstanding\r\n        this.app.syncAll(true).finally(() => {\r\n\r\n            // the apps occurrences should only relate to the current survey\r\n            // (the reset are remote or in IndexedDb)\r\n            this.app.clearCurrentSurvey().then(() => {\r\n\r\n                this.app.setNewSurvey();\r\n\r\n                this.app.router.pause();\r\n                this.app.router.navigate('/list/survey/about').resume(); // jump straight into the survey rather than to welcome stage\r\n                this.app.router.resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * called after user has confirmed reset surveys dialog box\r\n     */\r\n    resetSurveysHandler() {\r\n        this.app.clearLocalForage().then(() => {\r\n            return this.app.reset();\r\n        }).finally(() => {\r\n            this.addNewSurveyHandler();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * url fragment to redirect to, following addition of an existing survey, e.g. a pick from the selection list\r\n     *\r\n     * should be '/list' or '/list/record'\r\n     *\r\n     * @type {string}\r\n     */\r\n    restoredSurveyNavigationTarget = '/list';\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('add'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    addSurveyHandler(context, subcontext, rhs, queryParameters) {\r\n        console.log(\"reached addSurveyHandler\");\r\n        console.log({context: context, params: subcontext, query: queryParameters});\r\n\r\n        this.app.currentControllerHandle = this.handle; // when navigate back need to list need to ensure full view refresh\r\n\r\n        let surveyId = queryParameters.surveyId;\r\n\r\n        if (!surveyId || !surveyId.match(UUID_REGEX)) {\r\n            throw new NotFoundError(`Failed to match survey id '${surveyId}', the id format appears to be incorrect`);\r\n        }\r\n\r\n        surveyId = surveyId.toLowerCase();\r\n\r\n        // hide the left panel before loading, otherwise there can be a confusing delay\r\n        this.view.hideLeftPanel();\r\n\r\n        this.app.restoreOccurrences(surveyId)\r\n            .then(() => {\r\n                this.app.markAllNotPristine();\r\n\r\n                this.app.router.pause();\r\n                this.app.router.navigate(this.restoredSurveyNavigationTarget).resume();\r\n                this.app.router.resolve();\r\n            }, (error) => {\r\n                console.log({'failed survey restoration' : error});\r\n\r\n                // should display a modal error message\r\n                // either the survey was not found or there was no network connection\r\n\r\n                // should switch to displaying a list of available surveys and an option to start a new survey\r\n            })\r\n            .finally(() => {\r\n                this.view.restoreLeftPanel();\r\n            })\r\n        ;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('add'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    mainRouteHandler(context, subcontext, rhs, queryParameters) {\r\n        console.log(\"reached special route handler for SurveyPickerController.js\");\r\n        console.log({context: context, params: subcontext, query: queryParameters});\r\n    }\r\n}\r\n","export class PartyError extends Error {\r\n\r\n}\r\n","import {PartyError} from \"../utils/exceptions/PartyError\";\r\nimport {escapeHTML} from \"../utils/escapeHTML\";\r\n\r\nexport class Party {\r\n    /**\r\n     * @typedef RawParty\r\n     * @type {object}\r\n     *\r\n     * @property {string} 0 - name string\r\n     * @property {array} 1 - dates (normally blank)\r\n     * @property {string} 2 - surname\r\n     * @property {string} 3 - forenames\r\n     * @property {string} 4 - orgName\r\n     * @property {string} 5 - initials\r\n     * @property {string} 6 - id\r\n     * @property {string} 7 - linked user id\r\n     * @property {array} 8 - roles\r\n     *\r\n     * // these are not implemented\r\n     * @property {string} [9] - type code\r\n     * @property {string} [10] - prefix\r\n     * @property {string} [11] - suffix\r\n     * @property {string} [12] - disambiguation\r\n     */\r\n\r\n    static NAME_INDEX = 0;\r\n    static SURNAME_INDEX = 2;\r\n    static FORENAMES_INDEX = 3;\r\n    static ORGNAME_INDEX = 4;\r\n    static INITIALS_INDEX = 5;\r\n    static ID_INDEX = 6;\r\n    static USERID_INDEX = 7;\r\n    static ROLES_INDEX = 8;\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, RawParty>}\r\n     */\r\n    static rawParties;\r\n\r\n    static TYPE_PERSON = 'p';\r\n    static TYPE_ORGANISATION = 'u';\r\n    static TYPE_UNKNOWN = '?';\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    id;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    name = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    firstName = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    surnameName = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    orgName = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    type = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    prefix = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    suffix = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    disambiguation = '';\r\n\r\n    static setParties(parties) {\r\n        Party.rawParties = parties;\r\n    }\r\n\r\n    static initialiseParties(parties, sourceUrl) {\r\n        Party.rawParties = parties;\r\n\r\n        if ((parties.stamp + (3600 * 24 * 7)) < (Date.now() / 1000)) {\r\n            console.log(`Taxon list may be stale (stamp is ${parties.stamp}), prompting re-cache.`);\r\n            navigator?.serviceWorker?.ready.then((registration) => {\r\n                registration.active.postMessage(\r\n                    {\r\n                        action: 'recache',\r\n                        url: sourceUrl\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @returns {Party}\r\n     * @throws {PartyError}\r\n     */\r\n    static fromId (id) {\r\n        if (!Party.rawParties) {\r\n            throw new PartyError(`Party.fromId() called before list has been initialized.`);\r\n        }\r\n\r\n        if (!Party.rawParties.hasOwnProperty(id)) {\r\n            throw new PartyError(`Party id '${id}' not found.`);\r\n        }\r\n\r\n        const raw = Party.rawParties[id];\r\n\r\n        const party = new Party;\r\n\r\n        party.id = id;\r\n        party.surname = raw[0] || '';\r\n        party.firstName = raw[1] || '';\r\n        party.orgName = raw[2] || '';\r\n        party.type = raw[3];\r\n        party.prefix = raw[4] || '';\r\n        party.suffix = raw[5] || '';\r\n        party.disambiguation = raw[6] || '';\r\n        // @todo need to set party.name\r\n\r\n        return party;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    formattedHTML() {\r\n\r\n        return this.type === Party.TYPE_PERSON ?\r\n            escapeHTML(`${this.firstName} ${this.surnameName}`)\r\n            :\r\n            escapeHTML(this.orgName);\r\n\r\n        // if (Taxon.showVernacular) {\r\n        //     if (vernacularMatched) {\r\n        //         return (acceptedTaxon) ?\r\n        //             `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>` +\r\n        //             ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n        //             :\r\n        //             `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n        //             ;\r\n        //     } else {\r\n        //         return (acceptedTaxon) ?\r\n        //             `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''\r\n        //             } = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n        //             :\r\n        //             `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''}`\r\n        //             ;\r\n        //     }\r\n        // } else {\r\n        //     return (acceptedTaxon) ?\r\n        //         `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>` +\r\n        //         ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n        //         :\r\n        //         `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n        //         ;\r\n        // }\r\n    }\r\n}\r\n","import {SAVE_STATE_LOCAL} from \"../../models/Model\";\r\n\r\nexport class ResponseFactory {\r\n    static responses = {};\r\n\r\n    /**\r\n     *\r\n     * @param {FormData} formData\r\n     * @returns {LocalResponse}\r\n     */\r\n    static fromPostedData(formData) {\r\n        /**\r\n         * the object that will be saved to IndexedDb\r\n         *\r\n         * this needs to be in scope for several stages of the promise chain\r\n         * @type {{[saved]: string, [type]: string, [imageId]: string, [surveyId]: string, [occurrenceId]: string, [image]: file, [projectId]: number, saveState: string }}\r\n         */\r\n        const toSaveLocally = {\r\n            saveState: SAVE_STATE_LOCAL // mark as not saved externally\r\n        };\r\n\r\n        for(let pair of formData.entries()) {\r\n            toSaveLocally[pair[0]] = pair[1];\r\n        }\r\n\r\n        if (!toSaveLocally.type) {\r\n            throw new Error('Missing type in form data.');\r\n        }\r\n\r\n        if (ResponseFactory.responses.hasOwnProperty(toSaveLocally.type)) {\r\n            return new ResponseFactory.responses[toSaveLocally.type](toSaveLocally, {});\r\n        } else {\r\n            throw new Error(`Unrecognised post type '${toSaveLocally.type}'`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}} returnedToClient\r\n     */\r\n    static fromPostResponse(returnedToClient) {\r\n        if (!returnedToClient) {\r\n            throw new Error('Invalid empty post response.');\r\n        }\r\n\r\n        if (!returnedToClient.type) {\r\n            throw new Error('Missing type in returned response.');\r\n        }\r\n\r\n        if (ResponseFactory.responses.hasOwnProperty(returnedToClient.type)) {\r\n            console.log(`in fromPostResponse returning a ${returnedToClient.type}`);\r\n            return new ResponseFactory.responses[returnedToClient.type]({}, returnedToClient);\r\n        } else {\r\n            throw new Error(`Unrecognised post type '${returnedToClient.type}'`);\r\n        }\r\n    }\r\n}\r\n","export function packageClientResponse (returnedToClient) {\r\n    const headers = new Headers;\r\n    headers.set('Content-Type', 'application/json');\r\n\r\n    return new Response(\r\n        JSON.stringify(returnedToClient),\r\n        {\r\n            status: returnedToClient.error ? 500 : 200,\r\n            headers\r\n        });\r\n}","import localforage from \"localforage\";\r\nimport {packageClientResponse} from \"../packageClientResponse\";\r\n\r\nexport class LocalResponse {\r\n    toSaveLocally;\r\n    returnedToClient;\r\n\r\n    /**\r\n     * @type {Response}\r\n     */\r\n    prebuiltResponse;\r\n\r\n    failureErrorMessage = 'Failed to save a local copy on your device.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    constructor(toSaveLocally, returnedToClient) {\r\n        this.toSaveLocally = toSaveLocally;\r\n        this.returnedToClient = returnedToClient;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Response} prebuiltResponse\r\n     * @returns this\r\n     */\r\n    setPrebuiltResponse(prebuiltResponse) {\r\n        this.prebuiltResponse = prebuiltResponse;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<Response>}\r\n     */\r\n    storeLocally() {\r\n        return localforage.setItem(this.localKey(), this.toSaveLocally).then(() => {\r\n                console.log(`Stored object ${this.localKey()} locally`);\r\n                return this.prebuiltResponse ? this.prebuiltResponse : packageClientResponse(this.returnedToClient);\r\n            },\r\n            (reason) => {\r\n                console.log(`Failed to store object ${this.localKey()} locally`);\r\n                console.log({reason});\r\n                this.returnedToClient.error = this.failureErrorMessage;\r\n                this.returnedToClient.errorHelp = this.failureErrorHelp;\r\n\r\n                return packageClientResponse(this.returnedToClient);\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * @return {string}\r\n     */\r\n    localKey () {\r\n        throw new Error(`LocalKey must be implemented in a subclass for ${this.toSaveLocally.type}`);\r\n    }\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     * @abstract\r\n     */\r\n    populateClientResponse() {\r\n    }\r\n}\r\n","import {ResponseFactory} from \"./ResponseFactory\";\r\nimport {LocalResponse} from \"./LocalResponse\";\r\nimport {SAVE_STATE_LOCAL, SAVE_STATE_SERVER} from \"../../models/Model\";\r\n\r\nexport class ImageResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store image.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.id = this.toSaveLocally.imageId ? this.toSaveLocally.imageId : this.toSaveLocally.id;\r\n        this.returnedToClient.imageId = this.toSaveLocally.imageId ? this.toSaveLocally.imageId : this.toSaveLocally.id;\r\n        this.returnedToClient.type = 'image';\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.created = parseInt(this.toSaveLocally.created, 10); // stamps from server always take precedence\r\n        this.returnedToClient.modified = parseInt(this.toSaveLocally.modified, 10);\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = parseInt(this.toSaveLocally.projectId, 10);\r\n        this.returnedToClient.context = this.toSaveLocally.context;\r\n\r\n        if (this.toSaveLocally.context !== 'survey') {\r\n            this.returnedToClient.occurrenceId = this.toSaveLocally.occurrenceId;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.type = 'image';\r\n        this.toSaveLocally.imageId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.imageId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.imageId; // hedging\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = (this.returnedToClient.deleted === true || this.returnedToClient.deleted === 'true');\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.context = this.returnedToClient.context;\r\n\r\n        if (this.returnedToClient.context !== 'survey') {\r\n            this.toSaveLocally.occurrenceId = this.returnedToClient.occurrenceId;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `image.${this.toSaveLocally.imageId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.image = ImageResponse;\r\n    }\r\n}\r\n","import {ResponseFactory} from \"./ResponseFactory\";\r\nimport {LocalResponse} from \"./LocalResponse\";\r\nimport {SAVE_STATE_LOCAL, SAVE_STATE_SERVER} from \"../../models/Model\";\r\n\r\nexport class SurveyResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store survey.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.surveyId = this.toSaveLocally.id || this.toSaveLocally.surveyId; // hedging\r\n        this.returnedToClient.id = this.toSaveLocally.id ? this.toSaveLocally.id : this.toSaveLocally.surveyId; // hedging\r\n        this.returnedToClient.baseSurveyId = this.toSaveLocally.baseSurveyId || this.returnedToClient.id;\r\n        this.returnedToClient.type = 'survey';\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = this.toSaveLocally.created; // stamps from server always take precedence\r\n        this.returnedToClient.modified = this.toSaveLocally.modified;\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = this.toSaveLocally.projectId;\r\n        this.returnedToClient.userId = this.toSaveLocally.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId;\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId;\r\n        this.toSaveLocally.baseSurveyId = this.returnedToClient.baseSurveyId || this.toSaveLocally.id;\r\n        this.toSaveLocally.type = 'survey';\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = this.returnedToClient.deleted;\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.userId = this.returnedToClient.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `survey.${this.toSaveLocally.surveyId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.survey = SurveyResponse;\r\n    }\r\n}\r\n","import {ResponseFactory} from \"./ResponseFactory\";\r\nimport {LocalResponse} from \"./LocalResponse\";\r\nimport {SAVE_STATE_LOCAL, SAVE_STATE_SERVER} from \"../../models/Model\";\r\n\r\nexport class OccurrenceResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store occurrence.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.id = this.toSaveLocally.occurrenceId ? this.toSaveLocally.occurrenceId : this.toSaveLocally.id;\r\n        this.returnedToClient.occurrenceId = this.toSaveLocally.occurrenceId ? this.toSaveLocally.occurrenceId : this.toSaveLocally.id;\r\n        this.returnedToClient.type = 'occurrence';\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = parseInt(this.toSaveLocally.created, 10); // stamps from server always take precedence\r\n        this.returnedToClient.modified = parseInt(this.toSaveLocally.modified, 10);\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = parseInt(this.toSaveLocally.projectId, 10);\r\n        this.returnedToClient.userId = this.toSaveLocally.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.occurrenceId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.occurrenceId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.occurrenceId; // hedging\r\n        this.toSaveLocally.type = 'occurrence';\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = (this.returnedToClient.deleted === true || this.returnedToClient.deleted === 'true');\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.userId = this.returnedToClient.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `occurrence.${this.toSaveLocally.occurrenceId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.occurrence = OccurrenceResponse;\r\n    }\r\n}\r\n","import {ResponseFactory} from \"./ResponseFactory\";\r\nimport {LocalResponse} from \"./LocalResponse\";\r\nimport {SAVE_STATE_LOCAL, SAVE_STATE_SERVER} from \"../../models/Model\";\r\n\r\nexport class TrackResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store tracking data.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.deviceId = this.toSaveLocally.deviceId;\r\n        this.returnedToClient.type = 'track';\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = this.toSaveLocally.created; // stamps from server always take precedence\r\n        this.returnedToClient.modified = this.toSaveLocally.modified;\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted || '';\r\n        this.returnedToClient.projectId = this.toSaveLocally.projectId;\r\n        this.returnedToClient.userId = this.toSaveLocally.userId || '';\r\n        this.returnedToClient.pointIndex = this.toSaveLocally.pointIndex;\r\n        this.returnedToClient.points = this.toSaveLocally.points;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.deviceId = this.returnedToClient.deviceId;\r\n        this.toSaveLocally.type = 'track';\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = this.returnedToClient.deleted;\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.userId = this.returnedToClient.userId || '';\r\n        this.toSaveLocally.pointIndex = parseInt(this.returnedToClient.pointIndex, 10);\r\n        this.toSaveLocally.points = this.returnedToClient.points; // may eventually want to truncate this to save local space\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `track.${this.toSaveLocally.surveyId}.${this.toSaveLocally.deviceId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.track = TrackResponse;\r\n    }\r\n}\r\n","// service worker for BSBI app\r\n\r\n// based around the 'Cache and update' recipe along with many modifications\r\n// see https://serviceworke.rs\r\n\r\nimport localforage from 'localforage';\r\nimport {ResponseFactory} from \"./responses/ResponseFactory\";\r\nimport {ImageResponse} from \"./responses/ImageResponse\";\r\nimport {packageClientResponse} from \"./packageClientResponse\";\r\nimport {SurveyResponse} from \"./responses/SurveyResponse\";\r\nimport {OccurrenceResponse} from \"./responses/OccurrenceResponse\";\r\nimport {OccurrenceImage} from \"../models/OccurrenceImage\";\r\nimport {Model} from \"../models/Model\";\r\nimport {TrackResponse} from \"./responses/TrackResponse\";\r\n\r\nexport class BSBIServiceWorker {\r\n\r\n    /**\r\n     * @var {Array.<string>}\r\n     */\r\n    URL_CACHE_SET;\r\n\r\n    /**\r\n     * @var {string}\r\n     */\r\n    CACHE_VERSION;\r\n\r\n    /**\r\n     * @var {string}\r\n     */\r\n    DATA_CACHE_VERSION;\r\n\r\n    /**\r\n     * @var {RegExp}\r\n     */\r\n    SERVICE_WORKER_DATA_URL_MATCHES;\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *  forageName : string,\r\n     *  postPassThroughWhitelist : RegExp,\r\n     *  postImageUrlMatch : RegExp,\r\n     *  getImageUrlMatch : RegExp,\r\n     *  interceptUrlMatches : RegExp,\r\n     *  [dataUrlMatches] : RegExp,\r\n     *  ignoreUrlMatches : RegExp,\r\n     *  staticUrlMatches : RegExp|null,\r\n     *  passThroughNoCache : RegExp,\r\n     *  indexUrl : string,\r\n     *  urlCacheSet : Array.<string>,\r\n     *  version : string,\r\n     *  [dataVersion] : string\r\n     * }} configuration\r\n     */\r\n    initialise(configuration) {\r\n        if (!Promise.prototype.finally) {\r\n            Promise.prototype.finally = function (callback) { // must use 'function' here rather than arrow, due to this binding requirement\r\n                return this.then(callback)\r\n                    .catch(callback);\r\n            };\r\n        }\r\n\r\n        ImageResponse.register();\r\n        SurveyResponse.register();\r\n        OccurrenceResponse.register();\r\n        TrackResponse.register();\r\n\r\n        this.CACHE_VERSION = `version-BSBI_APP_VERSION-${configuration.version}`;\r\n        this.DATA_CACHE_VERSION = `bsbi-data-${configuration.dataVersion || configuration.version}`;\r\n\r\n        Model.bsbiAppVersion = configuration.version;\r\n\r\n        const POST_PASS_THROUGH_WHITELIST = configuration.postPassThroughWhitelist;\r\n        const POST_IMAGE_URL_MATCH = configuration.postImageUrlMatch;\r\n        const GET_IMAGE_URL_MATCH = configuration.getImageUrlMatch;\r\n        const SERVICE_WORKER_INTERCEPT_URL_MATCHES = configuration.interceptUrlMatches;\r\n        const SERVICE_WORKER_IGNORE_URL_MATCHES = configuration.ignoreUrlMatches;\r\n        const SERVICE_WORKER_PASS_THROUGH_NO_CACHE = configuration.passThroughNoCache;\r\n\r\n        this.SERVICE_WORKER_DATA_URL_MATCHES = configuration.dataUrlMatches || /^NO_MATCHING$/;\r\n\r\n        /**\r\n         * Urls that should be cached, with no need for automatic refresh\r\n         *\r\n         * @type {RegExp|null}\r\n         */\r\n        const SERVICE_WORKER_STATIC_URL_MATCHES= configuration.staticUrlMatches;\r\n        const INDEX_URL = configuration.indexUrl;\r\n\r\n        this.URL_CACHE_SET = configuration.urlCacheSet;\r\n\r\n        localforage.config({\r\n            name: configuration.forageName\r\n        });\r\n\r\n        self.addEventListener(\"message\", (event) => {\r\n                console.log({\"Message received\": event.data});\r\n\r\n                switch (event.data.action) {\r\n                    case 'recache':\r\n                        event.waitUntil(this.handleRecacheMessage(event.data.url));\r\n                        break;\r\n                }\r\n            }\r\n        );\r\n\r\n        // On install, cache some resources.\r\n        self.addEventListener('install', (evt) => {\r\n            console.log('BSBI app service worker is being installed.');\r\n\r\n            // noinspection JSIgnoredPromiseFromCall\r\n            self.skipWaiting();\r\n\r\n            // Ask the service worker to keep installing until the returning promise\r\n            // resolves.\r\n            evt.waitUntil(\r\n                this.precache()\r\n                    // see https://serviceworke.rs/immediate-claim_service-worker_doc.html\r\n                    // .finally(() => {\r\n                    //     console.log(\"Service worker skip waiting after precache.\");\r\n                    //\r\n                    //     return self.skipWaiting();\r\n                    // })\r\n            );\r\n        });\r\n\r\n        self.addEventListener('activate', (event) => {\r\n            console.log({'service worker activate event' : event});\r\n\r\n            event.waitUntil(\r\n                self.clients.matchAll({\r\n                    includeUncontrolled: true\r\n                }).then((clientList) => {\r\n                    const urls = clientList.map((client) => {\r\n                        return client.url;\r\n                    });\r\n                    console.log('[ServiceWorker] Matching clients:', urls.join(', '));\r\n                }).then(() => caches.keys())\r\n                    .then((cacheNames) => {\r\n                        return Promise.all(\r\n                            cacheNames.map((cacheName) => {\r\n                                // test for 'version' prefix to avoid deleting mapbox tiles\r\n                                if (cacheName.startsWith('version') && cacheName !== this.CACHE_VERSION) {\r\n                                    console.log('[ServiceWorker] Deleting old code cache:', cacheName);\r\n                                    return caches.delete(cacheName);\r\n                                }\r\n\r\n                                if (cacheName.startsWith('bsbi-data') && cacheName !== this.DATA_CACHE_VERSION) {\r\n                                    console.log('[ServiceWorker] Deleting old data cache:', cacheName);\r\n                                    return caches.delete(cacheName);\r\n                                }\r\n                            })\r\n                        );\r\n                    }).then(() => {\r\n                        console.log('[ServiceWorker] Claiming clients for version', this.CACHE_VERSION);\r\n                        return self.clients.claim();\r\n                    })\r\n                );\r\n            });\r\n\r\n\r\n        // // see https://davidwalsh.name/background-sync\r\n        // // https://developers.google.com/web/updates/2015/12/background-sync\r\n        // self.addEventListener('sync', function(event) {\r\n        //\r\n        // });\r\n\r\n        // On fetch, use cache but update the entry with the latest contents\r\n        // from the server.\r\n        self.addEventListener('fetch', /** @param {FetchEvent} evt */ (evt) => {\r\n            //console.log(`The service worker is serving: '${evt.request.url}'`);\r\n\r\n            evt.preventDefault();\r\n\r\n            if (evt.request.method === 'POST') {\r\n                //console.log(`Got a post request`);\r\n\r\n                //if (evt.request.url.match(POST_PASS_THROUGH_WHITELIST)) {\r\n                if (POST_PASS_THROUGH_WHITELIST.test(evt.request.url)) {\r\n                    //console.log(`Passing through whitelisted post request for: ${evt.request.url}`);\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else if (SERVICE_WORKER_PASS_THROUGH_NO_CACHE.test(evt.request.url)) {\r\n                    //console.log(`Passing through nocache list post request for: ${evt.request.url}`);\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else {\r\n                    //if (evt.request.url.match(POST_IMAGE_URL_MATCH)) {\r\n                    if (POST_IMAGE_URL_MATCH.test(evt.request.url)) {\r\n                        //console.log(`Got an image post request: '${evt.request.url}'`);\r\n                        this.handle_image_post(evt);\r\n                    } else {\r\n                        //console.log(`Got post request: '${evt.request.url}'`);\r\n                        this.handle_post(evt);\r\n                    }\r\n                }\r\n            } else {\r\n                // test whether this is a direct link in to a page that should be substituted by\r\n                // the single page app\r\n\r\n                // console.log(`about to test url '${evt.request.url}'`);\r\n\r\n                if (SERVICE_WORKER_INTERCEPT_URL_MATCHES.test(evt.request.url) &&\r\n                    !SERVICE_WORKER_IGNORE_URL_MATCHES.test(evt.request.url)\r\n                ) {\r\n                    // serving single page app instead\r\n                    console.log(`redirecting to the root of the SPA for '${evt.request.url}'`);\r\n                    let spaRequest = new Request(INDEX_URL);\r\n                    evt.respondWith(this.fromCache(spaRequest));\r\n\r\n                    // don't need to check for fresh, stale is fine here\r\n                    //evt.waitUntil(this.update(spaRequest));\r\n                } else if (evt.request.url.match(GET_IMAGE_URL_MATCH)) {\r\n                    console.log(`request is for an image '${evt.request.url}'`);\r\n                    this.handleImageFetch(evt);\r\n                } else if (SERVICE_WORKER_PASS_THROUGH_NO_CACHE.test(evt.request.url)) {\r\n                    // typically for external content that can't/shouldn't be cached, e.g. MapBox tiles (which mapbox stores directly in the cache itself)\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else if (SERVICE_WORKER_STATIC_URL_MATCHES?.test(evt.request.url)) {\r\n                    // typically for content that won't change\r\n                    evt.respondWith(this.fromCache(evt.request));\r\n                } else {\r\n                    console.log(`request is for non-image '${evt.request.url}'`);\r\n                    // You can use `respondWith()` to answer immediately, without waiting for the\r\n                    // network response to reach the service worker...\r\n                    evt.respondWith(this.fromCache(evt.request));\r\n                    // ...and `waitUntil()` to prevent the worker from being killed until the\r\n                    // cache is updated.\r\n                    evt.waitUntil(this.update(evt.request));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * used to handle small posts (not images)\r\n     * attempts remote save first then caches locally\r\n     *\r\n     * @param {FetchEvent} evt\r\n     */\r\n    handle_post(evt) {\r\n        let clonedRequest;\r\n        try {\r\n            clonedRequest = evt.request.clone();\r\n        } catch (e) {\r\n            console.log('Failed to clone request.');\r\n            console.log({'Cloning error': e});\r\n        }\r\n\r\n        evt.respondWith(fetch(evt.request)\r\n            .then((response) => {\r\n                // would get here if the server responds at all, but need to check that the response is ok (not a server error)\r\n                if (response.ok) {\r\n                    return Promise.resolve(response)\r\n                        .then((response) => {\r\n                            // save the response locally\r\n                            // before returning it to the client\r\n\r\n                            console.log('About to clone the json response.')\r\n\r\n                            return response.clone().json();\r\n                        })\r\n                        .then((jsonResponseData) => {\r\n                            console.log('Following successful remote post, about to save locally.');\r\n\r\n                            return ResponseFactory\r\n                                .fromPostResponse(jsonResponseData)\r\n                                .setPrebuiltResponse(response)\r\n                                .populateLocalSave()\r\n                                .storeLocally();\r\n                        })\r\n                        .catch((error) => {\r\n                            // for some reason local storage failed, after a successful server save\r\n                            console.log({'local storage failed' : error});\r\n\r\n                            return Promise.resolve(response); // pass through the server response\r\n                        });\r\n                } else {\r\n                    console.log(`Failed to save, moving on to attempt IndexedDb`);\r\n                    return Promise.reject('Failed to save to server.');\r\n                }\r\n            })\r\n            .catch( (reason) => {\r\n                    console.log({'post fetch failed (probably no network)': reason});\r\n\r\n                    // would get here if the network is down\r\n                    // or if got invalid response from the server\r\n\r\n                    console.log(`post fetch failed (probably no network), (reason: ${reason})`);\r\n                    //console.log({'post failure reason' : reason});\r\n\r\n                    // /**\r\n                    //  * simulated result of post, returned as JSON body\r\n                    //  * @type {{surveyId: string, occurrenceId: string, imageId: string, saveState: string, [error]: string, [errorHelp]: string}}\r\n                    //  */\r\n                    // let returnedToClient = {};\r\n\r\n                    return clonedRequest.formData()\r\n                        .then((formData) => {\r\n                                console.log('got to form data handler');\r\n                                //console.log({formData});\r\n\r\n                                return ResponseFactory\r\n                                    .fromPostedData(formData)\r\n                                    .populateClientResponse()\r\n                                    .storeLocally();\r\n                            }, (reason) => {\r\n                                console.log({'failed to read form data locally' : reason});\r\n\r\n                                /**\r\n                                 * simulated result of post, returned as JSON body\r\n                                 * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                                 */\r\n                                let returnedToClient = {\r\n                                    error: 'Failed to process posted response data. (internal error)',\r\n                                    errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                        'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                        'Please try to re-establish a network connection and try again.'\r\n                                };\r\n\r\n                                return packageClientResponse(returnedToClient);\r\n                            }\r\n                        );\r\n                }\r\n            ));\r\n    }\r\n\r\n    /**\r\n     * used to handle image posts, which need to respond quickly even if the network is slow\r\n     * attempts local cache first then saves out to network\r\n     *\r\n     * @param {FetchEvent} event\r\n     */\r\n    handle_image_post(event) {\r\n        let clonedRequest;\r\n\r\n        console.log('posting image');\r\n\r\n        try {\r\n            clonedRequest = event.request.clone();\r\n        } catch (e) {\r\n            console.log('Failed to clone request.');\r\n            console.log({'Cloning error': e});\r\n        }\r\n\r\n        // send back a quick response to the client from local storage (before the server request completes)\r\n        event.respondWith(\r\n            clonedRequest.formData()\r\n                .then((formData) => {\r\n                        console.log({'got to image form data handler' : formData});\r\n                        //console.log({formData});\r\n\r\n                        return ResponseFactory\r\n                            .fromPostedData(formData)\r\n                            .populateClientResponse()\r\n                            .storeLocally()\r\n                            .then((response) => {\r\n\r\n                                // separately send data to the server, but response goes to client before this completes\r\n                                // am unsure if the return from the wait until part ever reaches the client\r\n                                event.waitUntil(fetch(event.request)\r\n                                    .then((response) => {\r\n                                            console.log('posting image to server in waitUntil part of fetch cycle');\r\n\r\n                                            // would get here if the server responds at all, but need to check that the response is ok (not a server error)\r\n                                            if (response.ok) {\r\n                                                console.log('posted image to server in waitUntil part of fetch cycle: got OK response');\r\n\r\n                                                return Promise.resolve(response)\r\n                                                    .then((response) => {\r\n                                                        // save the response locally\r\n                                                        // before returning it to the client\r\n\r\n                                                        return response.clone().json();\r\n                                                    })\r\n                                                    .then((jsonResponseData) => {\r\n                                                        return ResponseFactory\r\n                                                            .fromPostResponse(jsonResponseData)\r\n                                                            .setPrebuiltResponse(response)\r\n                                                            .populateLocalSave()\r\n                                                            .storeLocally();\r\n                                                    })\r\n                                                    .catch((error) => {\r\n                                                        // for some reason local storage failed, after a successful server save\r\n                                                        console.log({error});\r\n\r\n                                                        return Promise.resolve(response); // pass through the server response\r\n                                                    });\r\n                                            } else {\r\n                                                console.log('posted image to server in waitUntil part of fetch cycle: got Error response');\r\n\r\n                                                /**\r\n                                                 * simulated result of post, returned as JSON body\r\n                                                 * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                                                 */\r\n                                                let returnedToClient = {\r\n                                                    error: 'Failed to save posted response data. (internal error)',\r\n                                                    errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                                        'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                                        'Please try to re-establish a network connection and try again.'\r\n                                                };\r\n\r\n                                                return packageClientResponse(returnedToClient);\r\n                                            }\r\n                                        }, () => {\r\n                                            console.log('Rejected image post fetch from server - implies network is down')\r\n                                        }\r\n                                    ));\r\n\r\n                                return response;\r\n                            });\r\n                    }, (reason) => {\r\n                        console.log('failed to read form data locally');\r\n                        console.log({reason});\r\n\r\n                        /**\r\n                         * simulated result of post, returned as JSON body\r\n                         * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                         */\r\n                        let returnedToClient = {\r\n                            error: 'Failed to process posted response data. (internal error)',\r\n                            errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                'Please try to re-establish a network connection and try again.'\r\n                        };\r\n\r\n                        return packageClientResponse(returnedToClient);\r\n                    }\r\n                )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Open a cache and use `addAll()` with an array of assets to add all of them\r\n     * to the cache. Return a promise resolving when all the assets are added.\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    precache() {\r\n        return caches.open(this.CACHE_VERSION).then((cache) => {\r\n            return cache.addAll(this.URL_CACHE_SET);\r\n        }).catch((error) => {\r\n            console.log({'Precache failed result' : error});\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open the cache where the assets were stored and search for the requested\r\n     * resource. Notice that in case of no matching, the promise still resolves,\r\n     * but with `undefined` as value.\r\n     *\r\n     * @param {Request} request\r\n     * @param {boolean} tryRemoteFallback\r\n     * @param {number} remoteTimeoutMilliseconds (default 0 for no forced timeout)\r\n     * @returns {Promise<Response | Promise<Response>>}\r\n     */\r\n    fromCache(request, tryRemoteFallback= true, remoteTimeoutMilliseconds = 0) {\r\n        //console.log('attempting fromCache response');\r\n\r\n        let cacheName;\r\n\r\n        if (this.SERVICE_WORKER_DATA_URL_MATCHES.test(request.url)) {\r\n            cacheName = this.DATA_CACHE_VERSION\r\n        } else {\r\n            cacheName = this.CACHE_VERSION;\r\n        }\r\n\r\n        return caches.open(cacheName).then((cache) => {\r\n            //console.log('cache is open');\r\n\r\n            return cache.match(request).then((cachedResponse) => {\r\n                console.log(cachedResponse ?\r\n                    `cache matched ${request.url}`\r\n                    :\r\n                    `no cache match for ${request.url}`);\r\n\r\n                return cachedResponse || (tryRemoteFallback && this.update(request, remoteTimeoutMilliseconds)); // return cache match or if not cached then go out to network (and then locally cache the response)\r\n\r\n                // // see https://developer.chrome.com/docs/workbox/caching-strategies-overview/\r\n                // return cachedResponse || fetch(new Request(request, {mode: 'cors', credentials: 'omit'})).then((fetchedResponse) => {\r\n                //     // Add the network response to the cache for future visits.\r\n                //     // Note: we need to make a copy of the response to save it in\r\n                //     // the cache and use the original as the request response.\r\n                //     cache.put(request, fetchedResponse.clone());\r\n                //\r\n                //     // Return the network response\r\n                //     return fetchedResponse;\r\n                // });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Special case response for images\r\n     * attempt to serve from local cache first,\r\n     * if that fails then go out to network\r\n     * finally see if there is an image in indexeddb\r\n     *\r\n     * @param {FetchEvent} evt\r\n     */\r\n    handleImageFetch(evt) {\r\n        // tryRemoteFallback set to false to ensure a rapid response to client when bad network, at the cost of no access to remotely compressed image\r\n\r\n        evt.respondWith(this.fromCache(evt.request, true, 5000).then((response) => {\r\n                //console.log('In handleImageFetch promise');\r\n\r\n                // response may be a 404\r\n                if (response && response.ok) {\r\n                    console.info('Responding with image from cache (or remotely if no cache).');\r\n                    return response;\r\n                } else {\r\n                    // not cached and no network access\r\n                    // try to respond from local storage\r\n\r\n                    const url = evt.request.url;\r\n                    console.info(`Attempting image match for '${url}'`);\r\n\r\n                    const matches = url.match(/imageid=([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12})/);\r\n\r\n                    if (matches) {\r\n                        const imageId = matches[1];\r\n                        console.info(`Returning image match for '${url}' from local database`);\r\n                        return this.imageFromLocalDatabase(imageId);\r\n                    } else {\r\n                        console.error(`Failed to match image id in url '${url}'`);\r\n                    }\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    const url = evt.request.url;\r\n                    console.log({'caught' : error});\r\n                    console.log(`In catch following failed network fetch, attempting image match for '${url}'`);\r\n\r\n                    const matches = url.match(/imageid=([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12})/);\r\n\r\n                    if (matches) {\r\n                        const imageId = matches[1];\r\n                        console.log(`(via catch) Returning image match for '${url}' from local database`);\r\n                        return this.imageFromLocalDatabase(imageId);\r\n                    } else {\r\n                        console.error(`(via catch) Failed to match image id in url '${url}'`);\r\n                        return Promise.reject(null);\r\n                    }\r\n                })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} imageId\r\n     * @returns {Promise}\r\n     */\r\n    imageFromLocalDatabase(imageId) {\r\n        const image = new OccurrenceImage();\r\n\r\n        console.info('attempting retrieval of image data from local database');\r\n\r\n        return Model.retrieveFromLocal(imageId, image).then((image) => {\r\n            console.log(`Retrieved image '${imageId}' from indexeddb.`);\r\n            if (image.file) {\r\n                const headers = new Headers();\r\n                headers.append('Content-Type', image.file.type);\r\n\r\n                return new Response(image.file, {\r\n                    \"status\": 200,\r\n                    \"statusText\": \"OK image response from IndexedDb\"\r\n                });\r\n            } else {\r\n                console.error(`No local file object associated with retrieved image '${imageId}' from indexeddb.`);\r\n                return Promise.reject(`No local file object associated with retrieved image '${imageId}' from indexeddb.`);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param url\r\n     */\r\n    handleRecacheMessage(url) {\r\n        let cacheName;\r\n\r\n        if (this.SERVICE_WORKER_DATA_URL_MATCHES.test(url)) {\r\n            cacheName = this.DATA_CACHE_VERSION\r\n        } else {\r\n            cacheName = this.CACHE_VERSION;\r\n        }\r\n\r\n        return caches.open(cacheName).then((cache) => {\r\n            return cache.add(url);\r\n        }).catch((error) => {\r\n            console.error({'Precache failed result' : error});\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update consists in opening the cache, performing a network request and\r\n     * storing the new response data.\r\n     *\r\n     * @param {Request} request\r\n     * @param {number} timeout request timeout in milliseconds (or 0 for no timeout)\r\n     * @returns {Promise<Response>}\r\n     */\r\n    update(request, timeout = 0) {\r\n        let cacheName;\r\n\r\n        if (this.SERVICE_WORKER_DATA_URL_MATCHES.test(request.url)) {\r\n            cacheName = this.DATA_CACHE_VERSION\r\n        } else {\r\n            cacheName = this.CACHE_VERSION;\r\n        }\r\n\r\n        request = new Request(request, {mode: 'cors', credentials: 'omit'});\r\n\r\n        console.info(`Attempting fetch and cache update of ${request.url}`);\r\n\r\n        return caches.open(cacheName).then((cache) => {\r\n            let signalController;\r\n            let timeoutId;\r\n            const fetchOptions = {cache: \"no-cache\"};\r\n\r\n            if (timeout) {\r\n                signalController = new AbortController();\r\n                timeoutId = setTimeout(() => {\r\n                    signalController.abort();\r\n                    console.log(`User-define update fetch timeout expired after ${timeout} ms`);\r\n                }, timeout);\r\n                fetchOptions.signal = signalController.signal;\r\n            }\r\n\r\n            return fetch(request, fetchOptions).then((response) => {\r\n                if (timeoutId) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                }\r\n\r\n                if (response.ok) {\r\n                    console.info(`(re-)caching ${request.url}`);\r\n                    return cache.put(request, response).then(() => {\r\n                        return cache.match(request);\r\n                    });\r\n                } else {\r\n                    console.error(`Request during cache update failed for ${request.url}`);\r\n                    console.error({'failed cache response': response});\r\n                    return Promise.reject('Request during cache update failed, not caching.');\r\n                }\r\n            }).catch((error) => {\r\n                if (timeoutId) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                }\r\n\r\n                console.log(`Cache attempt failed for ${request.url}: error was ${error}`);\r\n                return Promise.reject(`Cache attempt failed for ${request.url}: error was ${error}`);\r\n            });\r\n        });\r\n    }\r\n}\r\n","/**\r\n *\r\n * @param {string} separator\r\n * @param {string} finalSeparator\r\n * @param {Array.<string>} list\r\n * @return string\r\n */\r\nexport function formattedImplode(separator, finalSeparator, list) {\r\n    if (list.length > 2) {\r\n        const last = list.pop();\r\n        return `${list.join(separator + ' ')} ${finalSeparator} ${last}`;\r\n    } else {\r\n        return list.join(` ${finalSeparator} `);\r\n    }\r\n}"],"names":["require","global"],"mappings":"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,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7D;AACA,QAAQ,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC;AACxF,QAAQ,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;AAChD,KAAK;AACL;;ACxeA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACO,MAAM,MAAM,SAAS,KAAK,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,cAAc,GAAG,UAAU,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,yBAAyB,GAAG,oBAAoB,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,yBAAyB,GAAG,mBAAmB,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,4BAA4B,GAAG,sBAAsB,CAAC;AACjE;AACA,IAAI,aAAa,GAAG,iBAAiB,CAAC;AACtC;AACA,IAAI,IAAI,GAAG,QAAQ,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG;AACjB;AACA,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAsB,GAAG,KAAK,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG,IAAI,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,aAAa,GAAG,EAAE,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,YAAY,GAAG;AACvB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI;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K,CAAC;AACtC;AACA;;ACCO,MAAM,KAAK,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,eAAe,GAAG,EAAE,CAAC;AAChC,IAAI,OAAO,OAAO,GAAG,EAAE,CAAC;AACxB,IAAI,OAAO,eAAe,GAAG,EAAE,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC;AACnB;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC;AACP;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,EAAE,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG,EAAE,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,EAAE,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,EAAE,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,KAAK,CAAC;AAC1B;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC;AACT;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC;AACd;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,EAAE,GAAG,IAAI;AACjB,QAAQ,EAAE,GAAG,IAAI;AACjB,QAAQ,EAAE,GAAG,IAAI;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAg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jB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,GAAG,KAAK,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,EAAE,IAAI,GAAG,EAAE,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,IAAI,GAAG,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,IAAI,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC;AACd;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,6BAA6B,GAAG,sBAAsB,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,mBAAmB,GAAG,kBAAkB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,gBAAgB,GAAG,WAAW,CAAC;AAC1C;AACA,IAAI,OAAO,qBAAqB,GAAG,kBAAkB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,sBAAsB,GAAG,iBAAiB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,mBAAmB,GAAG,cAAc,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,uBAAuB,GAAG,kBAAkB,CAAC;AACxD;AACA,IAAI,OAAO,gCAAgC,GAAG,0BAA0B,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,4BAA4B,GAAG,sBAAsB,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,qBAAqB,GAAG,gBAAgB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,0BAA0B,GAAG,mBAAmB,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AAC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","x_google_ignoreList":[4]}